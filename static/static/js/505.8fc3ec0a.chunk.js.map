{"version":3,"file":"static/js/505.8fc3ec0a.chunk.js","mappings":"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","sources":["pages/JobDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getJob, getJobOutput } from '../services/api';\n\ninterface ChainResult {\n  result: string;\n  error: string;\n  name: string;\n  started_at: string;\n  finished_at: string;\n}\n\ninterface Job {\n  uuid: string;\n  name: string;\n  execution: string;\n  params: Record<string, any>;\n  exec_after: string | null;\n  created_at: string;\n  timeout: number;\n  chain_results: ChainResult[];\n  elapsed: string | null;\n}\n\nconst JobDetail = () => {\n  const { uuid } = useParams<{ uuid: string }>();\n  const [job, setJob] = useState<Job | null>(null);\n  const [output, setOutput] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState<'overview' | 'params' | 'steps' | 'output'>('overview');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!uuid) return;\n      try {\n        setLoading(true);\n        const jobResponse = await getJob(uuid);\n        setJob(jobResponse.data);\n\n        try {\n          const outputResponse = await getJobOutput(uuid);\n          setOutput(outputResponse.data);\n        } catch (outputErr) {\n          // Handle missing output gracefully\n          console.log(\"Could not fetch job output:\", outputErr);\n        }\n      } catch (err: any) {\n        setError(err.response?.data?.message || 'Failed to fetch job details');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [uuid]);\n\n  const formatDate = (dateStr?: string): string => {\n    if (!dateStr) return 'N/A';\n    const date = new Date(dateStr);\n    return date.toLocaleString();\n  };\n\n  const formatDuration = (start?: string, end?: string): string => {\n    if (!start || !end) return '—';\n    const startDate = new Date(start);\n    const endDate = new Date(end);\n    const diff = endDate.getTime() - startDate.getTime();\n\n    // Format the duration in a human-readable format\n    const seconds = Math.floor(diff / 1000);\n    if (seconds < 60) {\n      return `${seconds} sec`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes} min ${remainingSeconds} sec`;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"rounded-md bg-red-50 p-4 m-4\">\n        <div className=\"flex\">\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-red-800\">Error loading job details</h3>\n            <div className=\"mt-2 text-sm text-red-700\">\n              <p>{error}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!job) {\n    return (\n      <div className=\"rounded-md bg-yellow-50 p-4 m-4\">\n        <div className=\"flex\">\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-yellow-800\">Job not found</h3>\n            <div className=\"mt-2 text-sm text-yellow-700\">\n              <p>The job you're looking for doesn't exist or has been deleted.</p>\n              <Link to=\"/jobs\" className=\"text-indigo-600 hover:text-indigo-900 mt-2 inline-block\">\n                Return to Jobs List\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"px-4 sm:px-6 lg:px-8 py-6\">\n      {/* Breadcrumbs */}\n      <div className=\"mb-6\">\n        <nav className=\"flex\" aria-label=\"Breadcrumb\">\n          <ol className=\"flex items-center space-x-2 text-sm text-gray-500\">\n            <li>\n              <Link to=\"/\" className=\"hover:text-indigo-600\">Home</Link>\n            </li>\n            <li className=\"flex items-center\">\n              <svg className=\"h-4 w-4 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n              </svg>\n              <Link to=\"/jobs\" className=\"ml-2 hover:text-indigo-600\">Jobs</Link>\n            </li>\n            <li className=\"flex items-center\">\n              <svg className=\"h-4 w-4 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"ml-2 font-medium text-gray-900 truncate max-w-xs\">{job.name}</span>\n            </li>\n          </ol>\n        </nav>\n      </div>\n\n      {/* Job Header */}\n      <div className=\"bg-white shadow rounded-lg mb-6\">\n        <div className=\"px-6 py-5\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between\">\n            <div className=\"flex-1 min-w-0 mb-4 lg:mb-0\">\n              <div className=\"flex items-center\">\n                <div className=\"mr-4\">\n                  <div className={`rounded-full h-12 w-12 flex items-center justify-center ${\n                    job.execution === 'succeeded' ? 'bg-green-100' : \n                    job.execution === 'failed' ? 'bg-red-100' : \n                    'bg-yellow-100'\n                  }`}>\n                    <svg className={`h-6 w-6 ${\n                      job.execution === 'succeeded' ? 'text-green-500' : \n                      job.execution === 'failed' ? 'text-red-500' : \n                      'text-yellow-500'\n                    }`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </div>\n                </div>\n                <div>\n                  <h2 className=\"text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:tracking-tight flex items-center\">\n                    {job.name}\n                    <span className={`ml-3 px-3 py-0.5 inline-flex text-sm leading-5 font-medium rounded-full ${\n                      job.execution === 'succeeded' ? 'bg-green-100 text-green-800' : \n                      job.execution === 'failed' ? 'bg-red-100 text-red-800' : \n                      job.execution === 'running' ? 'bg-blue-100 text-blue-800' : \n                      job.execution === 'queued' ? 'bg-yellow-100 text-yellow-800' : \n                      'bg-gray-100 text-gray-800'\n                    }`}>\n                      {job.execution === 'succeeded' ? 'Succeeded' : \n                       job.execution === 'failed' ? 'Failed' : \n                       job.execution === 'running' ? 'Running' :\n                       job.execution === 'queued' ? 'Queued' :\n                       job.execution}\n                    </span>\n                  </h2>\n                  <div className=\"mt-1 text-sm text-gray-500 truncate\">{job.uuid}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Quick Stats */}\n          <div className=\"mt-6 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\n            <div className=\"bg-gray-50 overflow-hidden shadow rounded-lg\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">Created</dt>\n                  <dd className=\"mt-1 text-xl font-semibold text-gray-900\">\n                    {formatDate(job.created_at)}\n                  </dd>\n                </dl>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-50 overflow-hidden shadow rounded-lg\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">Duration</dt>\n                  <dd className=\"mt-1 text-xl font-semibold text-gray-900\">\n                    {job.elapsed || '—'}\n                  </dd>\n                </dl>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-50 overflow-hidden shadow rounded-lg\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">Timeout</dt>\n                  <dd className=\"mt-1 text-xl font-semibold text-gray-900\">\n                    {job.timeout ? `${job.timeout} sec` : '—'}\n                  </dd>\n                </dl>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-50 overflow-hidden shadow rounded-lg\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">VM</dt>\n                  <dd className=\"mt-1 text-xl font-semibold text-gray-900\">\n                    {job.params?.vm_uuid ? (\n                      <Link \n                        to={`/vms/${job.params.vm_uuid}`} \n                        className=\"text-indigo-600 hover:text-indigo-900 text-sm truncate\"\n                      >\n                        {job.params.vm_uuid}\n                      </Link>\n                    ) : '—'}\n                  </dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tabbed Content */}\n      <div className=\"bg-white shadow rounded-lg mb-6\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex\">\n            <button \n              onClick={() => setActiveTab('overview')}\n              className={`${\n                activeTab === 'overview' \n                  ? 'border-indigo-500 text-indigo-600' \n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none`}\n            >\n              Overview\n            </button>\n            <button \n              onClick={() => setActiveTab('params')}\n              className={`${\n                activeTab === 'params' \n                  ? 'border-indigo-500 text-indigo-600' \n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none`}\n            >\n              Parameters\n            </button>\n            <button \n              onClick={() => setActiveTab('steps')}\n              className={`${\n                activeTab === 'steps' \n                  ? 'border-indigo-500 text-indigo-600' \n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none`}\n            >\n              Steps\n            </button>\n            <button \n              onClick={() => setActiveTab('output')}\n              className={`${\n                activeTab === 'output' \n                  ? 'border-indigo-500 text-indigo-600' \n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none`}\n            >\n              Output\n            </button>\n          </nav>\n        </div>\n        \n        <div className=\"p-6\">\n          {/* Overview Tab */}\n          {activeTab === 'overview' && (\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Job Overview</h3>\n              <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n                <dl className=\"divide-y divide-gray-200\">\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Job Name</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{job.name}</dd>\n                  </div>\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Status</dt>\n                    <dd className=\"mt-1 text-sm sm:mt-0 sm:col-span-2\">\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                        job.execution === 'succeeded' ? 'bg-green-100 text-green-800' : \n                        job.execution === 'failed' ? 'bg-red-100 text-red-800' : \n                        job.execution === 'running' ? 'bg-blue-100 text-blue-800' : \n                        job.execution === 'queued' ? 'bg-yellow-100 text-yellow-800' : \n                        'bg-gray-100 text-gray-800'\n                      }`}>\n                        {job.execution === 'succeeded' ? 'Succeeded' : \n                         job.execution === 'failed' ? 'Failed' : \n                         job.execution === 'running' ? 'Running' :\n                         job.execution === 'queued' ? 'Queued' :\n                         job.execution}\n                      </span>\n                    </dd>\n                  </div>\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">UUID</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2 font-mono\">{job.uuid}</dd>\n                  </div>\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Created At</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{formatDate(job.created_at)}</dd>\n                  </div>\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Duration</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{job.elapsed || '—'}</dd>\n                  </div>\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Timeout</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{job.timeout || '—'} seconds</dd>\n                  </div>\n                  {job.params?.vm_uuid && (\n                    <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                      <dt className=\"text-sm font-medium text-gray-500\">VM</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                        <Link to={`/vms/${job.params.vm_uuid}`} className=\"text-indigo-600 hover:text-indigo-900 font-mono\">\n                          {job.params.vm_uuid}\n                        </Link>\n                      </dd>\n                    </div>\n                  )}\n                  {job.params?.task && (\n                    <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Task</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{job.params.task}</dd>\n                    </div>\n                  )}\n                </dl>\n              </div>\n            </div>\n          )}\n\n          {/* Parameters Tab */}\n          {activeTab === 'params' && (\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Job Parameters</h3>\n              {job.params ? (\n                <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n                  <div className=\"p-4\">\n                    <pre className=\"text-sm text-gray-800 overflow-auto max-h-[600px] p-4 bg-gray-100 rounded\">\n                      {JSON.stringify(job.params, null, 2)}\n                    </pre>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"bg-gray-50 p-6 text-center text-sm text-gray-500\">\n                  No parameters available for this job.\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Steps Tab */}\n          {activeTab === 'steps' && (\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Job Steps</h3>\n              {job.chain_results && job.chain_results.length > 0 ? (\n                <div className=\"overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg\">\n                  <table className=\"min-w-full divide-y divide-gray-300\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th scope=\"col\" className=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900\">Step</th>\n                        <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Result</th>\n                        <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Started</th>\n                        <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Duration</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200 bg-white\">\n                      {job.chain_results.map((step, index) => (\n                        <tr key={index} className={`${step.error ? 'bg-red-50' : ''} hover:bg-gray-50`}>\n                          <td className=\"whitespace-nowrap py-4 pl-4 pr-3 text-sm sm:pl-6\">\n                            <div className=\"font-medium text-gray-900\">{step.name}</div>\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm\">\n                            {step.error ? (\n                              <div className=\"text-red-600\">{step.error}</div>\n                            ) : (\n                              <div className=\"text-green-600\">{step.result}</div>\n                            )}\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            {step.started_at ? formatDate(step.started_at) : '—'}\n                          </td>\n                          <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                            {formatDuration(step.started_at, step.finished_at)}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <div className=\"bg-gray-50 p-6 text-center text-sm text-gray-500\">\n                  No step information available for this job.\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Output Tab */}\n          {activeTab === 'output' && (\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Job Output</h3>\n              {output ? (\n                <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n                  <div className=\"p-4\">\n                    <pre className=\"text-sm text-gray-800 overflow-auto max-h-[600px] p-4 bg-gray-100 rounded\">\n                      {output}\n                    </pre>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"bg-gray-50 p-6 text-center text-sm text-gray-500\">\n                  No output available for this job.\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JobDetail;"],"names":["JobDetail","_job$params","_job$params2","_job$params3","uuid","useParams","job","setJob","useState","output","setOutput","loading","setLoading","error","setError","activeTab","setActiveTab","useEffect","async","jobResponse","getJob","data","outputResponse","getJobOutput","outputErr","console","log","err","_err$response","_err$response$data","response","message","fetchData","formatDate","dateStr","Date","toLocaleString","formatDuration","start","end","startDate","diff","getTime","seconds","Math","floor","_jsx","className","children","_jsxs","Link","to","fill","viewBox","fillRule","d","clipRule","name","execution","stroke","strokeLinecap","strokeLinejoin","strokeWidth","created_at","elapsed","timeout","params","vm_uuid","onClick","task","JSON","stringify","chain_results","length","scope","map","step","index","result","started_at","finished_at"],"sourceRoot":""}