{"version":3,"file":"static/js/615.43f5a9e5.chunk.js","mappings":"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","sources":["pages/VMDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { \n  getVM, \n  getVMSnapshots, \n  getVMJobs, \n  getVMFirewallRules, \n  getImage, \n  getServer, \n  getPackages \n} from '../services/api';\n\n// Interface for VM details\ninterface VMDetail {\n  uuid: string;\n  alias: string;\n  state: string;\n  brand: string;\n  ram?: number;\n  memory?: number;\n  quota?: number;\n  disk?: number;\n  vcpus?: number;\n  owner_uuid?: string;\n  image_uuid?: string;\n  billing_id?: string;\n  package_uuid?: string;\n  server_uuid?: string;\n  create_timestamp?: string;\n  created_at?: string;\n  last_modified?: string;\n  tags?: Record<string, any>;\n  customer_metadata?: Record<string, any>;\n  internal_metadata?: Record<string, any>;\n  nics?: Array<{\n    interface?: string;\n    mac?: string;\n    ip?: string;\n    ips?: string[];\n    primary?: boolean;\n    netmask?: string;\n    network_uuid?: string;\n    nic_tag?: string;\n  }>;\n}\n\ninterface Image {\n  uuid: string;\n  name: string;\n  version: string;\n  os: string;\n}\n\ninterface Server {\n  uuid: string;\n  hostname: string;\n  status: string;\n}\n\ninterface Package {\n  uuid: string;\n  name: string;\n  version: string;\n  description?: string;\n}\n\ninterface Snapshot {\n  name: string;\n  created_at: string;\n  state: string;\n}\n\ninterface Job {\n  name: string;\n  uuid: string;\n  execution: string;\n  created_at: string;\n  status: string;\n  elapsed?: string;\n}\n\ninterface FirewallRule {\n  rule: string;\n  enabled: boolean;\n  global: boolean;\n}\n\nconst VMDetail = () => {\n  const { uuid } = useParams<{ uuid: string }>();\n  const [vm, setVM] = useState<VMDetail | null>(null);\n  const [image, setImage] = useState<Image | null>(null);\n  const [server, setServer] = useState<Server | null>(null);\n  const [pkg, setPackage] = useState<Package | null>(null);\n  // These states will be used in future tab implementations\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [snapshots, setSnapshots] = useState<Snapshot[]>([]);\n  const [jobs, setJobs] = useState<Job[]>([]);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [firewallRules, setFirewallRules] = useState<FirewallRule[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Format date\n  const formatDate = (dateStr?: string): string => {\n    if (!dateStr) return 'N/A';\n    \n    const date = new Date(dateStr);\n    return date.toLocaleString('en-US', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      timeZoneName: 'short'\n    });\n  };\n\n  // Format memory\n  const formatMemory = (vm: VMDetail): string => {\n    // RAM is typically defined in MB in VMAPI via the ram field\n    if (vm.ram) {\n      return `${vm.ram} MB`;\n    }\n    \n    // For backward compatibility\n    if (vm.memory) {\n      const mb = Math.round(vm.memory / (1024 * 1024));\n      return `${mb} MB`;\n    }\n    \n    return 'N/A';\n  };\n\n  // Format disk\n  const formatDisk = (vm: VMDetail): string => {\n    // For zones, quota is in GB\n    if (vm.quota) {\n      return `${vm.quota} GB`;\n    }\n    \n    // For KVM VMs, disk is in GB or bytes\n    if (vm.disk) {\n      // If disk value is very large, assume it's in bytes and convert to GB\n      if (vm.disk > 1000) {\n        const gb = Math.round(vm.disk / (1024 * 1024 * 1024));\n        return `${gb} GB`;\n      }\n      // Otherwise assume it's already in GB\n      return `${vm.disk} GB`;\n    }\n    \n    return 'N/A';\n  };\n\n  // Get IP addresses\n  const getIPAddresses = (vm: VMDetail): string[] => {\n    const ips: string[] = [];\n    \n    // Extract IPs from nics array\n    if (vm.nics && vm.nics.length > 0) {\n      for (const nic of vm.nics) {\n        // Add IP from ip field\n        if (nic.ip) {\n          ips.push(nic.ip);\n        }\n        \n        // Add IPs from ips array on the nic (typically includes CIDR notation)\n        if (nic.ips && nic.ips.length > 0) {\n          // Strip CIDR notation if present\n          const cleanIps = nic.ips.map(ip => ip.split('/')[0]);\n          ips.push(...cleanIps);\n        }\n      }\n    }\n    \n    // Deduplicate IPs and filter out undefined/null values\n    return Array.from(new Set(ips)).filter(ip => ip);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!uuid) return;\n      \n      try {\n        setLoading(true);\n        \n        // Fetch VM details\n        const vmResponse = await getVM(uuid);\n        const vmData = vmResponse.data;\n        setVM(vmData);\n        \n        // Fetch related data concurrently\n        const [snapshotsRes, jobsRes, firewallRes] = await Promise.all([\n          getVMSnapshots(uuid),\n          getVMJobs(uuid),\n          getVMFirewallRules(uuid)\n        ]);\n        \n        setSnapshots(snapshotsRes.data);\n        setJobs(jobsRes.data);\n        setFirewallRules(firewallRes.data);\n        \n        // Fetch image, server and package if available\n        if (vmData.image_uuid) {\n          try {\n            const imageRes = await getImage(vmData.image_uuid);\n            setImage(imageRes.data);\n          } catch (err) {\n            console.error('Error fetching image:', err);\n          }\n        }\n        \n        if (vmData.server_uuid) {\n          try {\n            const serverRes = await getServer(vmData.server_uuid);\n            setServer(serverRes.data);\n          } catch (err) {\n            console.error('Error fetching server:', err);\n          }\n        }\n        \n        if (vmData.billing_id || vmData.package_uuid) {\n          try {\n            const packageId = vmData.billing_id || vmData.package_uuid;\n            if (packageId) {\n              const packageRes = await getPackages();\n              const packageData = packageRes.data.find((p: any) => p.uuid === packageId);\n              if (packageData) {\n                setPackage(packageData);\n              }\n            }\n          } catch (err) {\n            console.error('Error fetching package:', err);\n          }\n        }\n        \n        setError(null);\n      } catch (err: any) {\n        setError(err.response?.data?.message || 'Failed to fetch VM details');\n        console.error('Error fetching VM details:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [uuid]);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"rounded-md bg-red-50 p-4 m-4\">\n        <div className=\"flex\">\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-red-800\">Error loading VM details</h3>\n            <div className=\"mt-2 text-sm text-red-700\">\n              <p>{error}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!vm) {\n    return (\n      <div className=\"rounded-md bg-yellow-50 p-4 m-4\">\n        <div className=\"flex\">\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-yellow-800\">VM not found</h3>\n            <div className=\"mt-2 text-sm text-yellow-700\">\n              <p>The virtual machine you're looking for doesn't exist or has been deleted.</p>\n              <Link to=\"/vms\" className=\"text-indigo-600 hover:text-indigo-900 mt-2 inline-block\">\n                Return to VM List\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Get status color\n  const getStatusColor = (state: string): string => {\n    switch(state.toLowerCase()) {\n      case 'running':\n        return 'bg-green-100 text-green-800';\n      case 'stopped':\n        return 'bg-gray-100 text-gray-800';\n      case 'provisioning':\n        return 'bg-blue-100 text-blue-800';\n      case 'failed':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-yellow-100 text-yellow-800';\n    }\n  };\n\n  return (\n    <div className=\"px-4 sm:px-6 lg:px-8 py-6\">\n      {/* Top Bar with breadcrumbs */}\n      <div className=\"mb-6\">\n        <nav className=\"flex\" aria-label=\"Breadcrumb\">\n          <ol className=\"flex items-center space-x-2 text-sm text-gray-500\">\n            <li>\n              <Link to=\"/\" className=\"hover:text-indigo-600\">Home</Link>\n            </li>\n            <li className=\"flex items-center\">\n              <svg className=\"h-4 w-4 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n              </svg>\n              <Link to=\"/vms\" className=\"ml-2 hover:text-indigo-600\">Virtual Machines</Link>\n            </li>\n            <li className=\"flex items-center\">\n              <svg className=\"h-4 w-4 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"ml-2 font-medium text-gray-900 truncate max-w-xs\">{vm.alias}</span>\n            </li>\n          </ol>\n        </nav>\n      </div>\n\n      {/* Header with VM name and quick stats */}\n      <div className=\"bg-white shadow rounded-lg mb-6\">\n        <div className=\"px-6 py-5\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between\">\n            {/* VM Title and UUID */}\n            <div className=\"flex-1 min-w-0 mb-4 lg:mb-0\">\n              <div className=\"flex items-center\">\n                <div className=\"mr-4\">\n                  <div className={`rounded-full h-12 w-12 flex items-center justify-center ${\n                    vm.state.toLowerCase() === 'running' ? 'bg-green-100' : \n                    vm.state.toLowerCase() === 'stopped' ? 'bg-gray-100' : \n                    'bg-yellow-100'\n                  }`}>\n                    <svg className={`h-6 w-6 ${\n                      vm.state.toLowerCase() === 'running' ? 'text-green-500' : \n                      vm.state.toLowerCase() === 'stopped' ? 'text-gray-500' : \n                      'text-yellow-500'\n                    }`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 12h14M12 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                </div>\n                <div>\n                  <h2 className=\"text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:tracking-tight flex items-center\">\n                    {vm.alias}\n                    <span className={`ml-3 px-3 py-0.5 inline-flex text-sm leading-5 font-medium rounded-full ${getStatusColor(vm.state)}`}>\n                      {vm.state}\n                    </span>\n                  </h2>\n                  <div className=\"mt-1 text-sm text-gray-500 truncate\">{vm.uuid}</div>\n                </div>\n              </div>\n            </div>\n            \n            {/* Quick Actions */}\n            <div className=\"flex flex-col sm:flex-row gap-3\">\n              <div className=\"dropdown inline-block relative\">\n                <button className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                  <span>Power</span>\n                  <svg className=\"h-4 w-4 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n                <div className=\"dropdown-menu hidden absolute right-0 mt-2 py-2 w-48 bg-white rounded-md shadow-xl z-10\">\n                  {vm.state.toLowerCase() === 'running' ? (\n                    <>\n                      <button className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex items-center\">\n                        <svg className=\"mr-3 h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                        Stop\n                      </button>\n                      <button className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex items-center\">\n                        <svg className=\"mr-3 h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                        </svg>\n                        Reboot\n                      </button>\n                    </>\n                  ) : (\n                    <button className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex items-center\">\n                      <svg className=\"mr-3 h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      Start\n                    </button>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"dropdown inline-block relative\">\n                <button className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                  <span>More</span>\n                  <svg className=\"h-4 w-4 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n                <div className=\"dropdown-menu hidden absolute right-0 mt-2 py-2 w-48 bg-white rounded-md shadow-xl z-10\">\n                  <button className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex items-center\">\n                    <svg className=\"mr-3 h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                    </svg>\n                    Take Snapshot\n                  </button>\n                  <button className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex items-center\">\n                    <svg className=\"mr-3 h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                    </svg>\n                    Rename\n                  </button>\n                  <div className=\"border-t border-gray-100 my-1\"></div>\n                  <button className=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 hover:text-red-900 flex items-center\">\n                    <svg className=\"mr-3 h-4 w-4 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                    Delete\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Quick Stats */}\n          <div className=\"mt-6 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\n            <div className=\"bg-gray-50 overflow-hidden shadow rounded-lg\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                    Memory\n                  </dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-gray-900\">\n                    {formatMemory(vm)}\n                  </dd>\n                  <dd className=\"mt-2 text-sm text-gray-500\">\n                    Available for applications\n                  </dd>\n                </dl>\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 overflow-hidden shadow rounded-lg\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                    Storage\n                  </dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-gray-900\">\n                    {formatDisk(vm)}\n                  </dd>\n                  <dd className=\"mt-2 text-sm text-gray-500\">\n                    Local disk space\n                  </dd>\n                </dl>\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 overflow-hidden shadow rounded-lg\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                    vCPUs\n                  </dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-gray-900\">\n                    {vm.vcpus || 'N/A'}\n                  </dd>\n                  <dd className=\"mt-2 text-sm text-gray-500\">\n                    Virtual processors\n                  </dd>\n                </dl>\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 overflow-hidden shadow rounded-lg\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                    IP Addresses\n                  </dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-gray-900\">\n                    {getIPAddresses(vm).length}\n                  </dd>\n                  <dd className=\"mt-2 text-sm text-gray-500\">\n                    Network interfaces\n                  </dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tabbed Interface */}\n      <div className=\"bg-white shadow rounded-lg mb-6\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex\">\n            {/* Using buttons instead of anchor elements for tab navigation */}\n            <button className=\"border-indigo-500 text-indigo-600 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none\">\n              Overview\n            </button>\n            <button className=\"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none\">\n              Networking\n            </button>\n            <button className=\"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none\">\n              Snapshots\n            </button>\n            <button className=\"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none\">\n              Metadata\n            </button>\n            <button className=\"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none\">\n              Firewall\n            </button>\n            <button className=\"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none\">\n              Jobs\n            </button>\n          </nav>\n        </div>\n        \n        {/* Overview Tab Content */}\n        <div className=\"p-6\">\n          <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\n            {/* VM Information Card */}\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">VM Information</h3>\n              <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n                <dl className=\"divide-y divide-gray-200\">\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Name</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{vm.alias}</dd>\n                  </div>\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Status</dt>\n                    <dd className=\"mt-1 text-sm sm:mt-0 sm:col-span-2\">\n                      <span className={`px-3 py-1 inline-flex text-sm leading-5 font-medium rounded-full ${getStatusColor(vm.state)}`}>\n                        {vm.state}\n                      </span>\n                    </dd>\n                  </div>\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Zone Brand</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{vm.brand}</dd>\n                  </div>\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Created</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                      {formatDate(vm.create_timestamp || vm.created_at)}\n                    </dd>\n                  </div>\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Last Modified</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                      {formatDate(vm.last_modified)}\n                    </dd>\n                  </div>\n                </dl>\n              </div>\n            </div>\n            \n            {/* Resources Card */}\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Resources</h3>\n              <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n                <dl className=\"divide-y divide-gray-200\">\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Image</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                      {image ? (\n                        <div>\n                          <span className=\"font-medium\">{image.name}</span> {image.version}\n                          <div className=\"text-xs text-gray-500 mt-1\">{vm.image_uuid}</div>\n                        </div>\n                      ) : (\n                        <span>{vm.image_uuid || 'N/A'}</span>\n                      )}\n                    </dd>\n                  </div>\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Server</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                      {server ? (\n                        <div>\n                          <Link to={`/servers/${vm.server_uuid}`} className=\"text-indigo-600 hover:text-indigo-900 font-medium\">\n                            {server.hostname}\n                          </Link>\n                          <div className=\"text-xs text-gray-500 mt-1\">{vm.server_uuid}</div>\n                        </div>\n                      ) : (\n                        <span>{vm.server_uuid || 'N/A'}</span>\n                      )}\n                    </dd>\n                  </div>\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Package</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                      {pkg ? (\n                        <div>\n                          <span className=\"font-medium\">{pkg.name}</span> {pkg.version}\n                          {pkg.description && (\n                            <div className=\"text-xs text-gray-500 mt-1\">{pkg.description}</div>\n                          )}\n                        </div>\n                      ) : (\n                        <span>{vm.billing_id || vm.package_uuid || 'N/A'}</span>\n                      )}\n                    </dd>\n                  </div>\n                  <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                    <dt className=\"text-sm font-medium text-gray-500\">Owner</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                      <div className=\"font-medium\">admin</div>\n                      <div className=\"text-xs text-gray-500\">Admin User</div>\n                      <div className=\"text-xs text-gray-500 mt-1\">\n                        root@localhost\n                        <span className=\"ml-1 text-gray-500\">{vm.owner_uuid}</span>\n                      </div>\n                    </dd>\n                  </div>\n                </dl>\n              </div>\n            </div>\n            \n            {/* Network Interfaces Card */}\n            <div className=\"lg:col-span-2\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Network Interfaces</h3>\n                <button className=\"text-sm text-indigo-600 hover:text-indigo-900 flex items-center\">\n                  <svg className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                  </svg>\n                  Add Network Interface\n                </button>\n              </div>\n              <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n                {vm.nics && vm.nics.length > 0 ? (\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full divide-y divide-gray-200\">\n                      <thead className=\"bg-gray-100\">\n                        <tr>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Network</th>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">IP</th>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Netmask</th>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">MAC Address</th>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tag</th>\n                          <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\n                        {vm.nics.map((nic, index) => (\n                          <tr key={index} className=\"hover:bg-gray-50\">\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 flex items-center\">\n                              {nic.primary && (\n                                <span className=\"mr-2 flex-shrink-0 h-2 w-2 rounded-full bg-green-400\" title=\"Primary Interface\"></span>\n                              )}\n                              {nic.interface || `net${index}`}\n                              {nic.primary && <span className=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">PRIMARY</span>}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{nic.ip || 'N/A'}</td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{nic.netmask || 'N/A'}</td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 font-mono text-xs\">{nic.mac || 'N/A'}</td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{nic.nic_tag || 'N/A'}</td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                              <button className=\"text-indigo-600 hover:text-indigo-900 mr-3\">Edit</button>\n                              {!nic.primary && (\n                                <button className=\"text-red-600 hover:text-red-900\">Remove</button>\n                              )}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                ) : (\n                  <div className=\"p-6 text-sm text-gray-500 text-center\">\n                    <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M17 14v6m-3-3h6M6 10h2a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2zm10 0h2a2 2 0 002-2V6a2 2 0 00-2-2h-2a2 2 0 00-2 2v2a2 2 0 002 2zM6 20h2a2 2 0 002-2v-2a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2z\" />\n                    </svg>\n                    <p className=\"mt-2\">No network interfaces found.</p>\n                    <button className=\"mt-3 inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                      <svg className=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                      </svg>\n                      Add Network Interface\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n            \n            {/* Recent Jobs Section */}\n            <div className=\"lg:col-span-2\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Recent Jobs</h3>\n                <Link to=\"/jobs\" className=\"text-sm text-indigo-600 hover:text-indigo-900\">View All Jobs</Link>\n              </div>\n              <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n                {jobs.length > 0 ? (\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full divide-y divide-gray-200\">\n                      <thead className=\"bg-gray-100\">\n                        <tr>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Job</th>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created</th>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Duration</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\n                        {jobs.map((job, index) => (\n                          <tr key={index} className=\"hover:bg-gray-50\">\n                            <td className=\"px-6 py-4 text-sm\">\n                              <div className=\"font-medium text-gray-900\">{job.name}</div>\n                              <div className=\"text-xs text-gray-500 mt-1 font-mono\">{job.uuid}</div>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <Link to={`/jobs/${job.uuid}`} className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                                job.execution === 'succeeded' ? 'bg-green-100 text-green-800' : \n                                job.execution === 'failed' ? 'bg-red-100 text-red-800' : \n                                job.execution === 'running' ? 'bg-blue-100 text-blue-800' : \n                                job.execution === 'queued' ? 'bg-yellow-100 text-yellow-800' : \n                                'bg-gray-100 text-gray-800'\n                              }`}>\n                                {job.execution === 'succeeded' ? 'Succeeded' : \n                                 job.execution === 'failed' ? 'Failed' : \n                                 job.execution === 'running' ? 'Running' :\n                                 job.execution === 'queued' ? 'Queued' :\n                                 job.execution}\n                              </Link>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {formatDate(job.created_at)}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {job.elapsed || '—'}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                ) : (\n                  <div className=\"p-6 text-sm text-gray-500 text-center\">\n                    <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    <p className=\"mt-2\">No recent jobs found for this VM.</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* CSS for dropdown functionality - Added to index.css instead */}\n    </div>\n  );\n};\n\nexport default VMDetail;"],"names":["VMDetail","uuid","useParams","vm","setVM","useState","image","setImage","server","setServer","pkg","setPackage","snapshots","setSnapshots","jobs","setJobs","firewallRules","setFirewallRules","loading","setLoading","error","setError","formatDate","dateStr","Date","toLocaleString","day","month","year","hour","minute","second","timeZoneName","useEffect","async","vmData","getVM","data","snapshotsRes","jobsRes","firewallRes","Promise","all","getVMSnapshots","getVMJobs","getVMFirewallRules","image_uuid","imageRes","getImage","err","console","server_uuid","serverRes","getServer","billing_id","package_uuid","packageId","packageData","getPackages","find","p","_err$response","_err$response$data","response","message","fetchData","_jsx","className","children","_jsxs","Link","to","getStatusColor","state","toLowerCase","fill","viewBox","fillRule","d","clipRule","alias","stroke","strokeLinecap","strokeLinejoin","strokeWidth","_Fragment","ram","memory","Math","round","formatMemory","quota","disk","formatDisk","vcpus","ips","nics","length","nic","ip","push","cleanIps","map","split","Array","from","Set","filter","getIPAddresses","brand","create_timestamp","created_at","last_modified","name","version","hostname","description","owner_uuid","scope","index","primary","title","interface","netmask","mac","nic_tag","job","execution","elapsed"],"sourceRoot":""}