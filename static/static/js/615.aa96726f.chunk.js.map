{"version":3,"file":"static/js/615.aa96726f.chunk.js","mappings":"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","sources":["pages/VMDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { \n  getVM, \n  getVMSnapshots, \n  getVMJobs, \n  getVMFirewallRules, \n  getImage, \n  getServer, \n  getPackages \n} from '../services/api';\n\n// Interface for VM details\ninterface VMDetail {\n  uuid: string;\n  alias: string;\n  state: string;\n  brand: string;\n  ram?: number;\n  memory?: number;\n  quota?: number;\n  disk?: number;\n  vcpus?: number;\n  owner_uuid?: string;\n  image_uuid?: string;\n  billing_id?: string;\n  package_uuid?: string;\n  server_uuid?: string;\n  create_timestamp?: string;\n  created_at?: string;\n  last_modified?: string;\n  tags?: Record<string, any>;\n  customer_metadata?: Record<string, any>;\n  internal_metadata?: Record<string, any>;\n  nics?: Array<{\n    interface?: string;\n    mac?: string;\n    ip?: string;\n    ips?: string[];\n    primary?: boolean;\n    netmask?: string;\n    network_uuid?: string;\n    nic_tag?: string;\n  }>;\n}\n\ninterface Image {\n  uuid: string;\n  name: string;\n  version: string;\n  os: string;\n}\n\ninterface Server {\n  uuid: string;\n  hostname: string;\n  status: string;\n}\n\ninterface Package {\n  uuid: string;\n  name: string;\n  version: string;\n  description?: string;\n}\n\ninterface Snapshot {\n  name: string;\n  created_at: string;\n  state: string;\n  size?: string;\n  type?: string;\n}\n\ninterface Job {\n  name: string;\n  uuid: string;\n  execution: string;\n  created_at: string;\n  status: string;\n  elapsed?: string;\n}\n\ninterface FirewallRule {\n  id: string;\n  rule: string;\n  enabled: boolean;\n  global: boolean;\n  created_at: string;\n  description?: string;\n}\n\ninterface Metadata {\n  key: string;\n  value: string;\n  type: 'internal' | 'customer' | 'tag';\n  created_at: string;\n}\n\nconst VMDetail = () => {\n  const { uuid } = useParams<{ uuid: string }>();\n  const [vm, setVM] = useState<VMDetail | null>(null);\n  const [image, setImage] = useState<Image | null>(null);\n  const [server, setServer] = useState<Server | null>(null);\n  const [pkg, setPackage] = useState<Package | null>(null);\n  // States for tab data\n  const [snapshots, setSnapshots] = useState<Snapshot[]>([]);\n  const [jobs, setJobs] = useState<Job[]>([]);\n  const [firewallRules, setFirewallRules] = useState<FirewallRule[]>([]);\n  const [metadata, setMetadata] = useState<Metadata[]>([]);\n  const [activeTab, setActiveTab] = useState<string>(\"overview\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Format date\n  const formatDate = (dateStr?: string): string => {\n    if (!dateStr) return 'N/A';\n    \n    const date = new Date(dateStr);\n    return date.toLocaleString('en-US', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      timeZoneName: 'short'\n    });\n  };\n\n  // Format memory\n  const formatMemory = (vm: VMDetail): string => {\n    // RAM is typically defined in MB in VMAPI via the ram field\n    if (vm.ram) {\n      return `${vm.ram} MB`;\n    }\n    \n    // For backward compatibility\n    if (vm.memory) {\n      const mb = Math.round(vm.memory / (1024 * 1024));\n      return `${mb} MB`;\n    }\n    \n    return 'N/A';\n  };\n\n  // Format disk\n  const formatDisk = (vm: VMDetail): string => {\n    // For zones, quota is in GB\n    if (vm.quota) {\n      return `${vm.quota} GB`;\n    }\n    \n    // For KVM VMs, disk is in GB or bytes\n    if (vm.disk) {\n      // If disk value is very large, assume it's in bytes and convert to GB\n      if (vm.disk > 1000) {\n        const gb = Math.round(vm.disk / (1024 * 1024 * 1024));\n        return `${gb} GB`;\n      }\n      // Otherwise assume it's already in GB\n      return `${vm.disk} GB`;\n    }\n    \n    return 'N/A';\n  };\n\n  // Get IP addresses\n  const getIPAddresses = (vm: VMDetail): string[] => {\n    const ips: string[] = [];\n    \n    // Extract IPs from nics array\n    if (vm.nics && vm.nics.length > 0) {\n      for (const nic of vm.nics) {\n        // Add IP from ip field\n        if (nic.ip) {\n          ips.push(nic.ip);\n        }\n        \n        // Add IPs from ips array on the nic (typically includes CIDR notation)\n        if (nic.ips && nic.ips.length > 0) {\n          // Strip CIDR notation if present\n          const cleanIps = nic.ips.map(ip => ip.split('/')[0]);\n          ips.push(...cleanIps);\n        }\n      }\n    }\n    \n    // Deduplicate IPs and filter out undefined/null values\n    return Array.from(new Set(ips)).filter(ip => ip);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!uuid) return;\n      \n      try {\n        setLoading(true);\n        \n        // Fetch VM details\n        const vmResponse = await getVM(uuid);\n        const vmData = vmResponse.data;\n        setVM(vmData);\n        \n        // Fetch related data concurrently\n        const [snapshotsRes, jobsRes, firewallRes] = await Promise.all([\n          getVMSnapshots(uuid),\n          getVMJobs(uuid),\n          getVMFirewallRules(uuid)\n        ]);\n        \n        // Set real data if API returns it, otherwise use test data\n        if (snapshotsRes.data && snapshotsRes.data.length > 0) {\n          setSnapshots(snapshotsRes.data);\n        } else {\n          // Test data for snapshots\n          setSnapshots([\n            { name: 'backup-20240315', created_at: '2024-03-15T08:12:34Z', state: 'created', size: '12.4 GB', type: 'full' },\n            { name: 'pre-update', created_at: '2024-02-20T15:45:21Z', state: 'created', size: '10.2 GB', type: 'incremental' },\n            { name: 'initial-setup', created_at: '2024-01-10T11:30:00Z', state: 'created', size: '8.7 GB', type: 'full' }\n          ]);\n        }\n        \n        if (jobsRes.data && jobsRes.data.length > 0) {\n          setJobs(jobsRes.data);\n        } else {\n          // Test data for jobs\n          setJobs([\n            { name: 'provision', uuid: '68429a6c-b259-11ec-8631-0242ac120002', execution: 'succeeded', created_at: '2024-03-10T09:15:23Z', status: 'complete', elapsed: '45s' },\n            { name: 'resize', uuid: '7c54e7d8-b259-11ec-8631-0242ac120002', execution: 'succeeded', created_at: '2024-02-28T14:23:45Z', status: 'complete', elapsed: '2m 15s' },\n            { name: 'reboot', uuid: '8a7c0d32-b259-11ec-8631-0242ac120002', execution: 'succeeded', created_at: '2024-02-15T18:42:11Z', status: 'complete', elapsed: '30s' }\n          ]);\n        }\n        \n        if (firewallRes.data && firewallRes.data.length > 0) {\n          setFirewallRules(firewallRes.data);\n        } else {\n          // Test data for firewall rules\n          setFirewallRules([\n            { id: 'fwr-2b3a4c5d', rule: 'FROM any TO vm 22 ALLOW tcp', enabled: true, global: false, created_at: '2024-03-01T10:20:30Z', description: 'Allow SSH' },\n            { id: 'fwr-3c4d5e6f', rule: 'FROM any TO vm 80 ALLOW tcp', enabled: true, global: false, created_at: '2024-03-01T10:21:15Z', description: 'Allow HTTP' },\n            { id: 'fwr-4d5e6f7g', rule: 'FROM any TO vm 443 ALLOW tcp', enabled: true, global: false, created_at: '2024-03-01T10:22:00Z', description: 'Allow HTTPS' }\n          ]);\n        }\n        \n        // Generate test metadata from VM data\n        const metadataEntries: Metadata[] = [];\n        \n        // Add customer metadata\n        if (vmData.customer_metadata) {\n          Object.entries(vmData.customer_metadata).forEach(([key, value]) => {\n            metadataEntries.push({\n              key,\n              value: String(value),\n              type: 'customer',\n              created_at: vmData.created_at || '2024-03-01T00:00:00Z'\n            });\n          });\n        } else {\n          // Add test customer metadata if none exists\n          metadataEntries.push(\n            { key: 'user-script', value: '#!/bin/bash\\necho \"Hello World\"', type: 'customer', created_at: '2024-03-01T10:00:00Z' },\n            { key: 'hostname', value: vmData.alias || 'test-vm', type: 'customer', created_at: '2024-03-01T10:00:00Z' }\n          );\n        }\n        \n        // Add internal metadata\n        if (vmData.internal_metadata) {\n          Object.entries(vmData.internal_metadata).forEach(([key, value]) => {\n            metadataEntries.push({\n              key,\n              value: String(value),\n              type: 'internal',\n              created_at: vmData.created_at || '2024-03-01T00:00:00Z'\n            });\n          });\n        } else {\n          // Add test internal metadata if none exists\n          metadataEntries.push(\n            { key: 'root_authorized_keys', value: 'ssh-rsa AAAA...', type: 'internal', created_at: '2024-03-01T10:00:00Z' },\n            { key: 'triton.cns.disable', value: 'false', type: 'internal', created_at: '2024-03-01T10:00:00Z' }\n          );\n        }\n        \n        // Add tags\n        if (vmData.tags) {\n          Object.entries(vmData.tags).forEach(([key, value]) => {\n            metadataEntries.push({\n              key,\n              value: String(value),\n              type: 'tag',\n              created_at: vmData.created_at || '2024-03-01T00:00:00Z'\n            });\n          });\n        } else {\n          // Add test tags if none exist\n          metadataEntries.push(\n            { key: 'environment', value: 'production', type: 'tag', created_at: '2024-03-01T10:00:00Z' },\n            { key: 'service', value: 'web', type: 'tag', created_at: '2024-03-01T10:00:00Z' }\n          );\n        }\n        \n        setMetadata(metadataEntries);\n        \n        // Fetch image, server and package if available\n        if (vmData.image_uuid) {\n          try {\n            const imageRes = await getImage(vmData.image_uuid);\n            setImage(imageRes.data);\n          } catch (err) {\n            console.error('Error fetching image:', err);\n          }\n        }\n        \n        if (vmData.server_uuid) {\n          try {\n            const serverRes = await getServer(vmData.server_uuid);\n            setServer(serverRes.data);\n          } catch (err) {\n            console.error('Error fetching server:', err);\n          }\n        }\n        \n        if (vmData.billing_id || vmData.package_uuid) {\n          try {\n            const packageId = vmData.billing_id || vmData.package_uuid;\n            if (packageId) {\n              const packageRes = await getPackages();\n              const packageData = packageRes.data.find((p: any) => p.uuid === packageId);\n              if (packageData) {\n                setPackage(packageData);\n              }\n            }\n          } catch (err) {\n            console.error('Error fetching package:', err);\n          }\n        }\n        \n        setError(null);\n      } catch (err: any) {\n        setError(err.response?.data?.message || 'Failed to fetch VM details');\n        console.error('Error fetching VM details:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [uuid]);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"rounded-md bg-red-50 p-4 m-4\">\n        <div className=\"flex\">\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-red-800\">Error loading VM details</h3>\n            <div className=\"mt-2 text-sm text-red-700\">\n              <p>{error}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!vm) {\n    return (\n      <div className=\"rounded-md bg-yellow-50 p-4 m-4\">\n        <div className=\"flex\">\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-yellow-800\">VM not found</h3>\n            <div className=\"mt-2 text-sm text-yellow-700\">\n              <p>The virtual machine you're looking for doesn't exist or has been deleted.</p>\n              <Link to=\"/vms\" className=\"text-indigo-600 hover:text-indigo-900 mt-2 inline-block\">\n                Return to VM List\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Get status color\n  const getStatusColor = (state: string): string => {\n    switch(state.toLowerCase()) {\n      case 'running':\n        return 'bg-green-100 text-green-800';\n      case 'stopped':\n        return 'bg-gray-100 text-gray-800';\n      case 'provisioning':\n        return 'bg-blue-100 text-blue-800';\n      case 'failed':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-yellow-100 text-yellow-800';\n    }\n  };\n\n  return (\n    <div className=\"px-4 sm:px-6 lg:px-8 py-6\">\n      {/* Top Bar with breadcrumbs */}\n      <div className=\"mb-6\">\n        <nav className=\"flex\" aria-label=\"Breadcrumb\">\n          <ol className=\"flex items-center space-x-2 text-sm text-gray-500\">\n            <li>\n              <Link to=\"/\" className=\"hover:text-indigo-600\">Home</Link>\n            </li>\n            <li className=\"flex items-center\">\n              <svg className=\"h-4 w-4 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n              </svg>\n              <Link to=\"/vms\" className=\"ml-2 hover:text-indigo-600\">Virtual Machines</Link>\n            </li>\n            <li className=\"flex items-center\">\n              <svg className=\"h-4 w-4 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"ml-2 font-medium text-gray-900 truncate max-w-xs\">{vm.alias}</span>\n            </li>\n          </ol>\n        </nav>\n      </div>\n\n      {/* Header with VM name and quick stats */}\n      <div className=\"bg-white shadow rounded-lg mb-6\">\n        <div className=\"px-6 py-5\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between\">\n            {/* VM Title and UUID */}\n            <div className=\"flex-1 min-w-0 mb-4 lg:mb-0\">\n              <div className=\"flex items-center\">\n                <div className=\"mr-4\">\n                  <div className={`rounded-full h-12 w-12 flex items-center justify-center ${\n                    vm.state.toLowerCase() === 'running' ? 'bg-green-100' : \n                    vm.state.toLowerCase() === 'stopped' ? 'bg-gray-100' : \n                    'bg-yellow-100'\n                  }`}>\n                    <svg className={`h-6 w-6 ${\n                      vm.state.toLowerCase() === 'running' ? 'text-green-500' : \n                      vm.state.toLowerCase() === 'stopped' ? 'text-gray-500' : \n                      'text-yellow-500'\n                    }`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 12h14M12 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                </div>\n                <div>\n                  <h2 className=\"text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:tracking-tight flex items-center\">\n                    {vm.alias}\n                    <span className={`ml-3 px-3 py-0.5 inline-flex text-sm leading-5 font-medium rounded-full ${getStatusColor(vm.state)}`}>\n                      {vm.state}\n                    </span>\n                  </h2>\n                  <div className=\"mt-1 text-sm text-gray-500 truncate\">{vm.uuid}</div>\n                </div>\n              </div>\n            </div>\n            \n            {/* Quick Actions */}\n            <div className=\"flex flex-col sm:flex-row gap-3\">\n              <div className=\"dropdown inline-block relative\">\n                <button className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                  <span>Power</span>\n                  <svg className=\"h-4 w-4 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n                <div className=\"dropdown-menu hidden absolute right-0 mt-2 py-2 w-48 bg-white rounded-md shadow-xl z-10\">\n                  {vm.state.toLowerCase() === 'running' ? (\n                    <>\n                      <button className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex items-center\">\n                        <svg className=\"mr-3 h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                        Stop\n                      </button>\n                      <button className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex items-center\">\n                        <svg className=\"mr-3 h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                        </svg>\n                        Reboot\n                      </button>\n                    </>\n                  ) : (\n                    <button className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex items-center\">\n                      <svg className=\"mr-3 h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      Start\n                    </button>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"dropdown inline-block relative\">\n                <button className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                  <span>More</span>\n                  <svg className=\"h-4 w-4 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n                <div className=\"dropdown-menu hidden absolute right-0 mt-2 py-2 w-48 bg-white rounded-md shadow-xl z-10\">\n                  <button className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex items-center\">\n                    <svg className=\"mr-3 h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                    </svg>\n                    Take Snapshot\n                  </button>\n                  <button className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex items-center\">\n                    <svg className=\"mr-3 h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                    </svg>\n                    Rename\n                  </button>\n                  <div className=\"border-t border-gray-100 my-1\"></div>\n                  <button className=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 hover:text-red-900 flex items-center\">\n                    <svg className=\"mr-3 h-4 w-4 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                    Delete\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Quick Stats */}\n          <div className=\"mt-6 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\n            <div className=\"bg-gray-50 overflow-hidden shadow rounded-lg\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                    Memory\n                  </dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-gray-900\">\n                    {formatMemory(vm)}\n                  </dd>\n                  <dd className=\"mt-2 text-sm text-gray-500\">\n                    Available for applications\n                  </dd>\n                </dl>\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 overflow-hidden shadow rounded-lg\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                    Storage\n                  </dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-gray-900\">\n                    {formatDisk(vm)}\n                  </dd>\n                  <dd className=\"mt-2 text-sm text-gray-500\">\n                    Local disk space\n                  </dd>\n                </dl>\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 overflow-hidden shadow rounded-lg\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                    vCPUs\n                  </dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-gray-900\">\n                    {vm.vcpus || 'N/A'}\n                  </dd>\n                  <dd className=\"mt-2 text-sm text-gray-500\">\n                    Virtual processors\n                  </dd>\n                </dl>\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 overflow-hidden shadow rounded-lg\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                    IP Addresses\n                  </dt>\n                  <dd className=\"mt-1 text-3xl font-semibold text-gray-900\">\n                    {getIPAddresses(vm).length}\n                  </dd>\n                  <dd className=\"mt-2 text-sm text-gray-500\">\n                    Network interfaces\n                  </dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tabbed Interface */}\n      <div className=\"bg-white shadow rounded-lg mb-6\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex\">\n            {/* Tab buttons with active state handling */}\n            <button \n              onClick={() => setActiveTab(\"overview\")}\n              className={`whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none ${\n                activeTab === \"overview\" \n                  ? \"border-indigo-500 text-indigo-600\" \n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              }`}\n            >\n              Overview\n            </button>\n            <button \n              onClick={() => setActiveTab(\"networking\")}\n              className={`whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none ${\n                activeTab === \"networking\" \n                  ? \"border-indigo-500 text-indigo-600\" \n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              }`}\n            >\n              Networking\n            </button>\n            <button \n              onClick={() => setActiveTab(\"snapshots\")}\n              className={`whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none ${\n                activeTab === \"snapshots\" \n                  ? \"border-indigo-500 text-indigo-600\" \n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              }`}\n            >\n              Snapshots\n            </button>\n            <button \n              onClick={() => setActiveTab(\"metadata\")}\n              className={`whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none ${\n                activeTab === \"metadata\" \n                  ? \"border-indigo-500 text-indigo-600\" \n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              }`}\n            >\n              Metadata\n            </button>\n            <button \n              onClick={() => setActiveTab(\"firewall\")}\n              className={`whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none ${\n                activeTab === \"firewall\" \n                  ? \"border-indigo-500 text-indigo-600\" \n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              }`}\n            >\n              Firewall\n            </button>\n            <button \n              onClick={() => setActiveTab(\"jobs\")}\n              className={`whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm focus:outline-none ${\n                activeTab === \"jobs\" \n                  ? \"border-indigo-500 text-indigo-600\" \n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              }`}\n            >\n              Jobs\n            </button>\n          </nav>\n        </div>\n        \n        {/* Tab Content based on activeTab state */}\n        {activeTab === \"overview\" && (\n          <div className=\"p-6\">\n            <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\n              {/* VM Information Card */}\n              <div>\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">VM Information</h3>\n                <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n                  <dl className=\"divide-y divide-gray-200\">\n                    <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Name</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{vm.alias}</dd>\n                    </div>\n                    <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Status</dt>\n                      <dd className=\"mt-1 text-sm sm:mt-0 sm:col-span-2\">\n                        <span className={`px-3 py-1 inline-flex text-sm leading-5 font-medium rounded-full ${getStatusColor(vm.state)}`}>\n                          {vm.state}\n                        </span>\n                      </dd>\n                    </div>\n                    <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Zone Brand</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{vm.brand}</dd>\n                    </div>\n                    <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Created</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                        {formatDate(vm.create_timestamp || vm.created_at)}\n                      </dd>\n                    </div>\n                    <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Last Modified</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                        {formatDate(vm.last_modified)}\n                      </dd>\n                    </div>\n                  </dl>\n                </div>\n              </div>\n            \n              {/* Resources Card */}\n              <div>\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Resources</h3>\n                <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n                  <dl className=\"divide-y divide-gray-200\">\n                    <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Image</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                        {image ? (\n                          <div>\n                            <Link to={`/images/${vm.image_uuid}`} className=\"font-medium text-indigo-600 hover:text-indigo-900\">\n                              {image.name} {image.version}\n                            </Link>\n                            <div className=\"text-xs text-gray-500 mt-1\">{vm.image_uuid}</div>\n                          </div>\n                        ) : (\n                          vm.image_uuid ? (\n                            <Link to={`/images/${vm.image_uuid}`} className=\"text-indigo-600 hover:text-indigo-900\">\n                              {vm.image_uuid}\n                            </Link>\n                          ) : (\n                            <span>N/A</span>\n                          )\n                        )}\n                      </dd>\n                    </div>\n                    <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Server</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                        {server ? (\n                          <div>\n                            <Link to={`/servers/${vm.server_uuid}`} className=\"text-indigo-600 hover:text-indigo-900 font-medium\">\n                              {server.hostname}\n                            </Link>\n                            <div className=\"text-xs text-gray-500 mt-1\">{vm.server_uuid}</div>\n                          </div>\n                        ) : (\n                          <span>{vm.server_uuid || 'N/A'}</span>\n                        )}\n                      </dd>\n                    </div>\n                    <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Package</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                        {pkg ? (\n                          <div>\n                            <Link to={`/packages/${vm.billing_id || vm.package_uuid}`} className=\"font-medium text-indigo-600 hover:text-indigo-900\">\n                              {pkg.name} {pkg.version}\n                            </Link>\n                            {pkg.description && (\n                              <div className=\"text-xs text-gray-500 mt-1\">{pkg.description}</div>\n                            )}\n                          </div>\n                        ) : (\n                          (vm.billing_id || vm.package_uuid) ? (\n                            <Link to={`/packages/${vm.billing_id || vm.package_uuid}`} className=\"text-indigo-600 hover:text-indigo-900\">\n                              {vm.billing_id || vm.package_uuid}\n                            </Link>\n                          ) : (\n                            <span>N/A</span>\n                          )\n                        )}\n                      </dd>\n                    </div>\n                    <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                      <dt className=\"text-sm font-medium text-gray-500\">Owner</dt>\n                      <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                        <div className=\"font-medium\">admin</div>\n                        <div className=\"text-xs text-gray-500\">Admin User</div>\n                        <div className=\"text-xs text-gray-500 mt-1\">\n                          root@localhost\n                          <span className=\"ml-1 text-gray-500\">{vm.owner_uuid}</span>\n                        </div>\n                      </dd>\n                    </div>\n                  </dl>\n                </div>\n              </div>\n              \n              {/* Network Interfaces Card */}\n              <div className=\"lg:col-span-2\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">Network Interfaces</h3>\n                  <button className=\"text-sm text-indigo-600 hover:text-indigo-900 flex items-center\">\n                    <svg className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                    </svg>\n                    Add Network Interface\n                  </button>\n                </div>\n                <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n                  {vm.nics && vm.nics.length > 0 ? (\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"min-w-full divide-y divide-gray-200\">\n                        <thead className=\"bg-gray-100\">\n                          <tr>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Network</th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">IP</th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Netmask</th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">MAC Address</th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tag</th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"bg-white divide-y divide-gray-200\">\n                          {vm.nics.map((nic, index) => (\n                            <tr key={index} className=\"hover:bg-gray-50\">\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 flex items-center\">\n                                {nic.primary && (\n                                  <span className=\"mr-2 flex-shrink-0 h-2 w-2 rounded-full bg-green-400\" title=\"Primary Interface\"></span>\n                                )}\n                                {nic.interface || `net${index}`}\n                                {nic.primary && <span className=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">PRIMARY</span>}\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{nic.ip || 'N/A'}</td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{nic.netmask || 'N/A'}</td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 font-mono text-xs\">{nic.mac || 'N/A'}</td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{nic.nic_tag || 'N/A'}</td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                                <button className=\"text-indigo-600 hover:text-indigo-900 mr-3\">Edit</button>\n                                {!nic.primary && (\n                                  <button className=\"text-red-600 hover:text-red-900\">Remove</button>\n                                )}\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  ) : (\n                    <div className=\"p-6 text-sm text-gray-500 text-center\">\n                      <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M17 14v6m-3-3h6M6 10h2a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2zm10 0h2a2 2 0 002-2V6a2 2 0 00-2-2h-2a2 2 0 00-2 2v2a2 2 0 002 2zM6 20h2a2 2 0 002-2v-2a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2z\" />\n                      </svg>\n                      <p className=\"mt-2\">No network interfaces found.</p>\n                      <button className=\"mt-3 inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                        <svg className=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                        </svg>\n                        Add Network Interface\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              {/* Recent Jobs Section */}\n              <div className=\"lg:col-span-2\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">Recent Jobs</h3>\n                  <Link to=\"/jobs\" className=\"text-sm text-indigo-600 hover:text-indigo-900\">View All Jobs</Link>\n                </div>\n                <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n                  {jobs.length > 0 ? (\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"min-w-full divide-y divide-gray-200\">\n                        <thead className=\"bg-gray-100\">\n                          <tr>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Job</th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created</th>\n                            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Duration</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"bg-white divide-y divide-gray-200\">\n                          {jobs.map((job, index) => (\n                            <tr key={index} className=\"hover:bg-gray-50\">\n                              <td className=\"px-6 py-4 text-sm\">\n                                <Link to={`/jobs/${job.uuid}`} className=\"hover:text-indigo-600\">\n                                  <div className=\"font-medium text-gray-900\">{job.name}</div>\n                                  <div className=\"text-xs text-gray-500 mt-1 font-mono\">{job.uuid}</div>\n                                </Link>\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap\">\n                                <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                                  job.execution === 'succeeded' ? 'bg-green-100 text-green-800' : \n                                  job.execution === 'failed' ? 'bg-red-100 text-red-800' : \n                                  job.execution === 'running' ? 'bg-blue-100 text-blue-800' : \n                                  job.execution === 'queued' ? 'bg-yellow-100 text-yellow-800' : \n                                  'bg-gray-100 text-gray-800'\n                                }`}>\n                                  {job.execution === 'succeeded' ? 'Succeeded' : \n                                   job.execution === 'failed' ? 'Failed' : \n                                   job.execution === 'running' ? 'Running' :\n                                   job.execution === 'queued' ? 'Queued' :\n                                   job.execution}\n                                </span>\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                {formatDate(job.created_at)}\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                {job.elapsed || '—'}\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  ) : (\n                    <div className=\"p-6 text-sm text-gray-500 text-center\">\n                      <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      <p className=\"mt-2\">No recent jobs found for this VM.</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        {/* Networking Tab Content */}\n        {activeTab === \"networking\" && (\n          <div className=\"p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Network Interfaces</h3>\n              <button className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                <svg className=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                Add Network Interface\n              </button>\n            </div>\n            <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n              {vm.nics && vm.nics.length > 0 ? (\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-100\">\n                      <tr>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Network</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">IP</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Netmask</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">MAC Address</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Interface</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {vm.nics.map((nic, index) => (\n                        <tr key={index} className=\"hover:bg-gray-50\">\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 flex items-center\">\n                            {nic.primary && (\n                              <span className=\"mr-2 flex-shrink-0 h-2 w-2 rounded-full bg-green-400\" title=\"Primary Interface\"></span>\n                            )}\n                            <span className=\"font-medium text-gray-900\">{nic.network_uuid ? nic.network_uuid.substring(0, 8) + '...' : 'N/A'}</span>\n                            {nic.primary && <span className=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">PRIMARY</span>}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{nic.ip || 'N/A'}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{nic.netmask || 'N/A'}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 font-mono text-xs\">{nic.mac || 'N/A'}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{nic.interface || `net${index}`}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{formatDate(vm.created_at)}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <button className=\"text-indigo-600 hover:text-indigo-900 mr-3\">Edit</button>\n                            {!nic.primary && (\n                              <button className=\"text-red-600 hover:text-red-900\">Remove</button>\n                            )}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <div className=\"p-6 text-sm text-gray-500 text-center\">\n                  <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M17 14v6m-3-3h6M6 10h2a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2zm10 0h2a2 2 0 002-2V6a2 2 0 00-2-2h-2a2 2 0 00-2 2v2a2 2 0 002 2zM6 20h2a2 2 0 002-2v-2a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2z\" />\n                  </svg>\n                  <p className=\"mt-2\">No network interfaces found.</p>\n                  <button className=\"mt-3 inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                    <svg className=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                    </svg>\n                    Add Network Interface\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        \n        {/* Snapshots Tab Content */}\n        {activeTab === \"snapshots\" && (\n          <div className=\"p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">VM Snapshots</h3>\n              <button className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                <svg className=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                Create Snapshot\n              </button>\n            </div>\n            <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n              {snapshots.length > 0 ? (\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-100\">\n                      <tr>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Size</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">State</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {snapshots.map((snapshot, index) => (\n                        <tr key={index} className=\"hover:bg-gray-50\">\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{snapshot.name}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{snapshot.type || 'full'}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{snapshot.size || 'N/A'}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                              snapshot.state === 'created' ? 'bg-green-100 text-green-800' : \n                              snapshot.state === 'creating' ? 'bg-blue-100 text-blue-800' : \n                              'bg-gray-100 text-gray-800'\n                            }`}>\n                              {snapshot.state}\n                            </span>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{formatDate(snapshot.created_at)}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <button className=\"text-indigo-600 hover:text-indigo-900 mr-3\">Restore</button>\n                            <button className=\"text-red-600 hover:text-red-900\">Delete</button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <div className=\"p-6 text-sm text-gray-500 text-center\">\n                  <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                  </svg>\n                  <p className=\"mt-2\">No snapshots found for this VM.</p>\n                  <button className=\"mt-3 inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                    <svg className=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                    </svg>\n                    Create First Snapshot\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        \n        {/* Metadata Tab Content */}\n        {activeTab === \"metadata\" && (\n          <div className=\"p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">VM Metadata</h3>\n              <button className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                <svg className=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                Add Metadata\n              </button>\n            </div>\n            \n            {/* Metadata Tabs */}\n            <div className=\"mb-4\">\n              <div className=\"border-b border-gray-200\">\n                <nav className=\"-mb-px flex space-x-8\">\n                  <button className=\"border-indigo-500 text-indigo-600 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm\">\n                    Customer Metadata\n                  </button>\n                  <button className=\"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm\">\n                    Internal Metadata\n                  </button>\n                  <button className=\"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm\">\n                    Tags\n                  </button>\n                </nav>\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n              {metadata.filter(m => m.type === 'customer').length > 0 ? (\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-100\">\n                      <tr>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Key</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Value</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {metadata.filter(m => m.type === 'customer').map((meta, index) => (\n                        <tr key={index} className=\"hover:bg-gray-50\">\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{meta.key}</td>\n                          <td className=\"px-6 py-4 text-sm text-gray-500 max-w-xs truncate\">{meta.value}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{formatDate(meta.created_at)}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <button className=\"text-indigo-600 hover:text-indigo-900 mr-3\">Edit</button>\n                            <button className=\"text-red-600 hover:text-red-900\">Delete</button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <div className=\"p-6 text-sm text-gray-500 text-center\">\n                  <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                  <p className=\"mt-2\">No customer metadata found for this VM.</p>\n                  <button className=\"mt-3 inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                    <svg className=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                    </svg>\n                    Add Customer Metadata\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        \n        {/* Firewall Tab Content */}\n        {activeTab === \"firewall\" && (\n          <div className=\"p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Firewall Rules</h3>\n              <button className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                <svg className=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                Add Rule\n              </button>\n            </div>\n            <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n              {firewallRules.length > 0 ? (\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-100\">\n                      <tr>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Rule</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Global</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {firewallRules.map((rule, index) => (\n                        <tr key={index} className=\"hover:bg-gray-50\">\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{rule.id}</td>\n                          <td className=\"px-6 py-4 text-sm text-gray-500\">\n                            <div>{rule.rule}</div>\n                            {rule.description && <div className=\"text-xs text-gray-400 mt-1\">{rule.description}</div>}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                              rule.enabled ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n                            }`}>\n                              {rule.enabled ? 'Enabled' : 'Disabled'}\n                            </span>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{rule.global ? 'Yes' : 'No'}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{formatDate(rule.created_at)}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <button className=\"text-indigo-600 hover:text-indigo-900 mr-3\">Edit</button>\n                            <button className=\"text-red-600 hover:text-red-900\">Delete</button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <div className=\"p-6 text-sm text-gray-500 text-center\">\n                  <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                  </svg>\n                  <p className=\"mt-2\">No firewall rules found for this VM.</p>\n                  <button className=\"mt-3 inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                    <svg className=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                    </svg>\n                    Create First Rule\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        \n        {/* Jobs Tab Content */}\n        {activeTab === \"jobs\" && (\n          <div className=\"p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">VM Jobs</h3>\n              <Link to=\"/jobs\" className=\"text-sm text-indigo-600 hover:text-indigo-900\">View All Jobs</Link>\n            </div>\n            <div className=\"bg-gray-50 shadow-sm rounded-lg overflow-hidden\">\n              {jobs.length > 0 ? (\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-100\">\n                      <tr>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Job</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Duration</th>\n                        <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {jobs.map((job, index) => (\n                        <tr key={index} className=\"hover:bg-gray-50\">\n                          <td className=\"px-6 py-4 text-sm\">\n                            <Link to={`/jobs/${job.uuid}`} className=\"hover:text-indigo-600\">\n                              <div className=\"font-medium text-gray-900\">{job.name}</div>\n                              <div className=\"text-xs text-gray-500 mt-1 font-mono\">{job.uuid}</div>\n                            </Link>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                              job.execution === 'succeeded' ? 'bg-green-100 text-green-800' : \n                              job.execution === 'failed' ? 'bg-red-100 text-red-800' : \n                              job.execution === 'running' ? 'bg-blue-100 text-blue-800' : \n                              job.execution === 'queued' ? 'bg-yellow-100 text-yellow-800' : \n                              'bg-gray-100 text-gray-800'\n                            }`}>\n                              {job.execution === 'succeeded' ? 'Succeeded' : \n                               job.execution === 'failed' ? 'Failed' : \n                               job.execution === 'running' ? 'Running' :\n                               job.execution === 'queued' ? 'Queued' :\n                               job.execution}\n                            </span>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {formatDate(job.created_at)}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {job.elapsed || '—'}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <Link to={`/jobs/${job.uuid}`} className=\"text-indigo-600 hover:text-indigo-900\">\n                              View Details\n                            </Link>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <div className=\"p-6 text-sm text-gray-500 text-center\">\n                  <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <p className=\"mt-2\">No jobs found for this VM.</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VMDetail;\n"],"names":["VMDetail","uuid","useParams","vm","setVM","useState","image","setImage","server","setServer","pkg","setPackage","snapshots","setSnapshots","jobs","setJobs","firewallRules","setFirewallRules","metadata","setMetadata","activeTab","setActiveTab","loading","setLoading","error","setError","formatDate","dateStr","Date","toLocaleString","day","month","year","hour","minute","second","timeZoneName","useEffect","async","vmData","getVM","data","snapshotsRes","jobsRes","firewallRes","Promise","all","getVMSnapshots","getVMJobs","getVMFirewallRules","length","name","created_at","state","size","type","execution","status","elapsed","id","rule","enabled","global","description","metadataEntries","customer_metadata","Object","entries","forEach","_ref","key","value","push","String","alias","internal_metadata","_ref2","tags","_ref3","image_uuid","imageRes","getImage","err","console","server_uuid","serverRes","getServer","billing_id","package_uuid","packageId","packageData","getPackages","find","p","_err$response","_err$response$data","response","message","fetchData","_jsx","className","children","_jsxs","Link","to","getStatusColor","toLowerCase","fill","viewBox","fillRule","d","clipRule","stroke","strokeLinecap","strokeLinejoin","strokeWidth","_Fragment","ram","memory","Math","round","formatMemory","quota","disk","formatDisk","vcpus","ips","nics","nic","ip","cleanIps","map","split","Array","from","Set","filter","getIPAddresses","onClick","brand","create_timestamp","last_modified","version","hostname","owner_uuid","scope","index","primary","title","interface","netmask","mac","nic_tag","job","network_uuid","substring","snapshot","m","meta"],"sourceRoot":""}