{"version":3,"file":"static/js/73.eef3e820.chunk.js","mappings":"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","sources":["pages/ServerDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getServer } from '../services/api';\n\ninterface Server {\n  uuid: string;\n  hostname: string;\n  status: string;\n  datacenter: string;\n  ram?: number;\n  memory_total_bytes?: number;\n  memory_available_bytes?: number;\n  disk_total_bytes?: number;\n  disk_available_bytes?: number;\n  cpu_type?: string;\n  cpu_cores?: number;\n  headnode?: boolean;\n  setup?: boolean;\n  setting_up?: boolean;\n  created?: string;\n  last_boot?: string;\n  current_platform?: string;\n  boot_platform?: string;\n  reservation_ratio?: number;\n  reserved?: boolean;\n  reservoir?: boolean;\n  system_type?: string;\n  comments?: string;\n  default_console?: string;\n  serial?: string;\n  traits?: Record<string, any>;\n  boot_params?: Record<string, any>;\n  kernel_flags?: Record<string, any>;\n  rack_identifier?: string;\n  sysinfo?: {\n    'Live Image'?: string;\n    Manufacturer?: string;\n    'Product'?: string;\n    [key: string]: any;\n  };\n}\n\nconst ServerDetail = () => {\n  const { uuid } = useParams<{ uuid: string }>();\n  const [server, setServer] = useState<Server | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState('overview');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!uuid) return;\n\n      try {\n        setLoading(true);\n        const serverResponse = await getServer(uuid);\n        const serverData = serverResponse.data;\n        setServer(serverData);\n        setError(null);\n      } catch (err: any) {\n        setError(err.response?.data?.message || 'Failed to fetch server details');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [uuid]);\n\n  const formatMemory = (ram?: number): string => {\n    if (!ram) return 'N/A';\n    const gb = ram / 1024;\n    return `${gb.toFixed(1)} GB`;\n  };\n\n  const formatDate = (dateString?: string): string => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleDateString() + ' ' + new Date(dateString).toLocaleTimeString();\n  };\n\n  const formatUptime = (lastBoot?: string): string => {\n    if (!lastBoot) return 'N/A';\n    \n    const bootTime = new Date(lastBoot).getTime();\n    const now = new Date().getTime();\n    const diffMs = now - bootTime;\n    \n    // Convert to days, hours, minutes\n    const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((diffMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const minutes = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\n    \n    if (days > 0) {\n      return `${days} days, ${hours} hours, ${minutes} minutes`;\n    } else if (hours > 0) {\n      return `${hours} hours, ${minutes} minutes`;\n    } else {\n      return `${minutes} minutes`;\n    }\n  };\n\n  const getStatusColor = (status: string): string => {\n    switch(status.toLowerCase()) {\n      case 'running':\n        return 'bg-green-100 text-green-800';\n      case 'online':\n        return 'bg-green-100 text-green-800';\n      case 'offline':\n        return 'bg-red-100 text-red-800';\n      case 'maintenance':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getSetupStatus = (server: Server) => {\n    if (server.setting_up) {\n      return (\n        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">\n          Setting up\n        </span>\n      );\n    } else if (server.setup) {\n      return (\n        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n          Setup complete\n        </span>\n      );\n    } else {\n      return (\n        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800\">\n          Setup needed\n        </span>\n      );\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n      </div>\n    );\n  }\n\n  if (error || !server) {\n    return (\n      <div className=\"rounded-md bg-red-50 p-4 m-4\">\n        <div className=\"flex\">\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-red-800\">Error loading server details</h3>\n            <div className=\"mt-2 text-sm text-red-700\">\n              <p>{error || 'Server data not available'}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"px-4 sm:px-6 lg:px-8 py-6\">\n      {/* Breadcrumb */}\n      <nav className=\"mb-4 text-sm\" aria-label=\"Breadcrumb\">\n        <ol className=\"flex items-center space-x-2\">\n          <li>\n            <Link to=\"/servers\" className=\"text-gray-500 hover:text-gray-700\">Servers</Link>\n          </li>\n          <li className=\"flex items-center\">\n            <svg className=\"h-5 w-5 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n            </svg>\n            <span className=\"ml-2 text-gray-700 font-medium\">{server.hostname}</span>\n          </li>\n        </ol>\n      </nav>\n\n      {/* Header with server name and quick stats */}\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg mb-6\">\n        <div className=\"px-4 py-5 sm:px-6 flex justify-between items-start\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\n              {server.hostname}\n              {server.headnode && <span className=\"ml-2 px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-indigo-100 text-indigo-800\">Headnode</span>}\n            </h1>\n            <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n              {server.datacenter} • {server.uuid}\n            </p>\n            {server.comments && (\n              <p className=\"mt-1 text-sm text-gray-600 italic\">\n                {server.comments}\n              </p>\n            )}\n          </div>\n          <div className=\"flex space-x-3\">\n            <span className={`px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full ${getStatusColor(server.status)}`}>\n              {server.status}\n            </span>\n            {getSetupStatus(server)}\n          </div>\n        </div>\n\n        <div className=\"border-t border-gray-200 px-4 py-5 sm:px-6\">\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-3\">\n            <div className=\"sm:col-span-1\">\n              <div className=\"text-sm font-medium text-gray-500\">Memory</div>\n              <div className=\"mt-1 text-sm text-gray-900 flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-gray-400 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n                {formatMemory(server.ram)}\n                {server.reservation_ratio && (\n                  <span className=\"ml-2 text-xs text-gray-500\">\n                    (Reservation: {(server.reservation_ratio * 100).toFixed(0)}%)\n                  </span>\n                )}\n              </div>\n            </div>\n            <div className=\"sm:col-span-1\">\n              <div className=\"text-sm font-medium text-gray-500\">Uptime</div>\n              <div className=\"mt-1 text-sm text-gray-900 flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-gray-400 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                {formatUptime(server.last_boot)}\n              </div>\n            </div>\n            <div className=\"sm:col-span-1\">\n              <div className=\"text-sm font-medium text-gray-500\">Current Platform</div>\n              <div className=\"mt-1 text-sm text-gray-900 font-mono\">\n                {server.current_platform || 'unknown'}\n                {server.current_platform !== server.boot_platform && (\n                  <div className=\"mt-1 text-yellow-600 text-xs\">\n                    Boot: {server.boot_platform || 'unknown'}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tabbed interface */}\n      <div className=\"bg-white shadow sm:rounded-lg\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8 px-6\" aria-label=\"Tabs\">\n            <button\n              onClick={() => setActiveTab('overview')}\n              className={`${\n                activeTab === 'overview'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Overview\n            </button>\n            <button\n              onClick={() => setActiveTab('specs')}\n              className={`${\n                activeTab === 'specs'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Specifications\n            </button>\n            <button\n              onClick={() => setActiveTab('settings')}\n              className={`${\n                activeTab === 'settings'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Settings\n            </button>\n            <button\n              onClick={() => setActiveTab('vms')}\n              className={`${\n                activeTab === 'vms'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Virtual Machines\n            </button>\n          </nav>\n        </div>\n\n        {/* Tab content */}\n        <div className=\"p-6\">\n          {activeTab === 'overview' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Server Information</h3>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Hostname</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{server.hostname}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">UUID</div>\n                    <div className=\"mt-1 text-sm text-gray-900 font-mono\">{server.uuid}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Datacenter</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{server.datacenter}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">System Type</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{server.system_type || 'N/A'}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Created</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{formatDate(server.created)}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Last Boot</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{formatDate(server.last_boot)}</div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Configuration</h3>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Setup Status</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      {getSetupStatus(server)}\n                    </div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Server Role</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      {server.headnode ? 'Headnode' : 'Compute Node'}\n                    </div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Default Console</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      {server.default_console || 'N/A'}\n                    </div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Serial Port</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      {server.serial || 'N/A'}\n                    </div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Reservation Status</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      {server.reserved ? 'Reserved' : 'Not Reserved'}\n                      {server.reservation_ratio && (\n                        <span className=\"ml-2 text-xs text-gray-500\">\n                          (Ratio: {(server.reservation_ratio * 100).toFixed(0)}%)\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Reservoir</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      {server.reservoir ? 'Yes' : 'No'}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {server.boot_params && Object.keys(server.boot_params).length > 0 && (\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Boot Parameters</h3>\n                  <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                    {Object.entries(server.boot_params).map(([key, value]) => (\n                      <div key={key} className=\"sm:col-span-1\">\n                        <div className=\"text-sm font-medium text-gray-500\">{key}</div>\n                        <div className=\"mt-1 text-sm text-gray-900\">{String(value)}</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'specs' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Hardware Specifications</h3>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Memory</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{formatMemory(server.ram)}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">CPU Type</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{server.cpu_type || 'N/A'}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">CPU Cores</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{server.cpu_cores || 'N/A'}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Rack Identifier</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{server.rack_identifier || 'N/A'}</div>\n                  </div>\n                </div>\n              </div>\n\n              {server.sysinfo && Object.keys(server.sysinfo).length > 0 && (\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">System Information</h3>\n                  <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                    {Object.entries(server.sysinfo).map(([key, value]) => (\n                      typeof value !== 'object' ? (\n                        <div key={key} className=\"sm:col-span-1\">\n                          <div className=\"text-sm font-medium text-gray-500\">{key}</div>\n                          <div className=\"mt-1 text-sm text-gray-900\">{String(value)}</div>\n                        </div>\n                      ) : null\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'settings' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Platform Settings</h3>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Current Platform</div>\n                    <div className=\"mt-1 text-sm text-gray-900 font-mono\">{server.current_platform || 'N/A'}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Boot Platform</div>\n                    <div className=\"mt-1 text-sm text-gray-900 font-mono\">{server.boot_platform || 'N/A'}</div>\n                  </div>\n                </div>\n              </div>\n\n              {server.kernel_flags && Object.keys(server.kernel_flags).length > 0 && (\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Kernel Flags</h3>\n                  <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                    {Object.entries(server.kernel_flags).map(([key, value]) => (\n                      <div key={key} className=\"sm:col-span-1\">\n                        <div className=\"text-sm font-medium text-gray-500\">{key}</div>\n                        <div className=\"mt-1 text-sm text-gray-900\">{String(value)}</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {server.traits && Object.keys(server.traits).length > 0 && (\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Server Traits</h3>\n                  <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                    {Object.entries(server.traits).map(([key, value]) => (\n                      <div key={key} className=\"sm:col-span-1\">\n                        <div className=\"text-sm font-medium text-gray-500\">{key}</div>\n                        <div className=\"mt-1 text-sm text-gray-900\">{JSON.stringify(value)}</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'vms' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Virtual Machines</h3>\n                <p className=\"text-sm text-gray-500 mb-4\">Virtual machines provisioned on this compute node will be displayed here.</p>\n                \n                <div className=\"flex justify-between items-center mb-4\">\n                  <span className=\"text-sm text-gray-500\">\n                    VM data loading not yet implemented\n                  </span>\n                  <Link\n                    to=\"/vms\"\n                    className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  >\n                    View All VMs\n                  </Link>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Action buttons */}\n      <div className=\"mt-6 flex flex-col-reverse space-y-4 space-y-reverse sm:flex-row-reverse sm:justify-end sm:space-y-0 sm:space-x-3 sm:space-x-reverse\">\n        <button\n          type=\"button\"\n          className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          <svg className=\"-ml-1 mr-2 h-5 w-5 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n          </svg>\n          Reboot\n        </button>\n        {!server.headnode && (\n          <button\n            type=\"button\"\n            className=\"inline-flex items-center px-4 py-2 border border-yellow-300 shadow-sm text-sm font-medium rounded-md text-yellow-700 bg-yellow-50 hover:bg-yellow-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\"\n          >\n            <svg className=\"-ml-1 mr-2 h-5 w-5 text-yellow-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n            </svg>\n            Enter Maintenance\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ServerDetail;"],"names":["ServerDetail","uuid","useParams","server","setServer","useState","loading","setLoading","error","setError","activeTab","setActiveTab","useEffect","async","serverData","getServer","data","err","_err$response","_err$response$data","response","message","fetchData","formatMemory","ram","toFixed","formatDate","dateString","Date","toLocaleDateString","toLocaleTimeString","getSetupStatus","setting_up","_jsx","className","children","setup","_jsxs","Link","to","fill","viewBox","fillRule","d","clipRule","hostname","headnode","datacenter","comments","status","toLowerCase","getStatusColor","xmlns","stroke","strokeLinecap","strokeLinejoin","strokeWidth","reservation_ratio","lastBoot","bootTime","getTime","diffMs","days","Math","floor","hours","minutes","formatUptime","last_boot","current_platform","boot_platform","onClick","system_type","created","default_console","serial","reserved","reservoir","boot_params","Object","keys","length","entries","map","_ref","key","value","String","cpu_type","cpu_cores","rack_identifier","sysinfo","_ref2","kernel_flags","_ref3","traits","_ref4","JSON","stringify","type"],"sourceRoot":""}