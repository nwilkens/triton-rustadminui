{"version":3,"file":"static/js/73.a35cd09a.chunk.js","mappings":"uLA+EA,MAmmBA,EAnmBqBA,KACnB,MAAM,KAAEC,IAASC,EAAAA,EAAAA,MACVC,EAAQC,IAAaC,EAAAA,EAAAA,UAAwB,OAC7CC,EAAKC,IAAUF,EAAAA,EAAAA,UAAe,KAC9BG,EAASC,IAAcJ,EAAAA,EAAAA,WAAkB,IACzCK,EAAYC,IAAiBN,EAAAA,EAAAA,WAAkB,IAC/CO,EAAOC,IAAYR,EAAAA,EAAAA,UAAwB,OAC3CS,EAAUC,IAAeV,EAAAA,EAAAA,UAAwB,OACjDW,EAAWC,IAAgBZ,EAAAA,EAAAA,UAAS,aAE3Ca,EAAAA,EAAAA,YAAU,KACUC,WAChB,GAAKlB,EAEL,IACEQ,GAAW,GACX,MACMW,SADuBC,EAAAA,EAAAA,IAAUpB,IACLqB,KAClClB,EAAUgB,GACVP,EAAS,KACX,CAAE,MAAOU,GAAW,IAADC,EAAAC,EACjBZ,GAAqB,QAAZW,EAAAD,EAAIG,gBAAQ,IAAAF,GAAM,QAANC,EAAZD,EAAcF,YAAI,IAAAG,OAAN,EAAZA,EAAoBE,UAAW,iCAC1C,CAAC,QACClB,GAAW,EACb,GAGFmB,EAAW,GACV,CAAC3B,KAEJiB,EAAAA,EAAAA,YAAU,KACSC,WACf,GAAKlB,EAEL,IACEU,GAAc,GACd,MAAMkB,QAAoBC,EAAAA,EAAAA,IAAe7B,GACzCM,EAAOsB,EAAYP,MACnBP,EAAY,KACd,CAAE,MAAOQ,GAAW,IAADQ,EAAAC,EACjBjB,GAAwB,QAAZgB,EAAAR,EAAIG,gBAAQ,IAAAK,GAAM,QAANC,EAAZD,EAAcT,YAAI,IAAAU,OAAN,EAAZA,EAAoBL,UAAW,mCAC7C,CAAC,QACChB,GAAc,EAChB,GAGFsB,EAAU,GACT,CAAChC,IAEJ,MAAMiC,EAAgBC,IACpB,IAAKA,EAAK,MAAO,MAEjB,MAAO,IADIA,EAAM,MACJC,QAAQ,OAAO,EAGxBC,EAAcC,GACbA,EACE,IAAIC,KAAKD,GAAYE,qBAAuB,IAAM,IAAID,KAAKD,GAAYG,qBADtD,MAwCpBC,EAAkBvC,GAClBA,EAAOwC,YAEPC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,0FAAyFC,SAAC,eAInG3C,EAAO4C,OAEdH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,4FAA2FC,SAAC,oBAM5GF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,8FAA6FC,SAAC,iBAOpH,OAAItC,GAEAoC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,UACpDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kFAKjBjC,IAAUT,GAEVyC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA8BC,UAC3CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mCAAkCC,SAAC,kCACjDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACxCF,EAAAA,EAAAA,KAAA,KAAAE,SAAIlC,GAAS,wCASvBoC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BC,SAAA,EAExCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAe,aAAW,aAAYC,UACnDE,EAAAA,EAAAA,MAAA,MAAIH,UAAU,8BAA6BC,SAAA,EACzCF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAG,WAAWL,UAAU,oCAAmCC,SAAC,eAEpEE,EAAAA,EAAAA,MAAA,MAAIH,UAAU,oBAAmBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAwBM,KAAK,eAAeC,QAAQ,YAAWN,UAC5EF,EAAAA,EAAAA,KAAA,QAAMS,SAAS,UAAUC,EAAE,qHAAqHC,SAAS,eAE3JX,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iCAAgCC,SAAE3C,EAAOqD,oBAM/DR,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qDAAoDC,SAAA,EACjEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qDAAoDC,SAAA,EACjEE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEE,EAAAA,EAAAA,MAAA,MAAIH,UAAU,qDAAoDC,SAAA,CAC/D3C,EAAOqD,SACPrD,EAAOsD,WAAYb,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mGAAkGC,SAAC,iBAEzIE,EAAAA,EAAAA,MAAA,KAAGH,UAAU,uCAAsCC,SAAA,CAChD3C,EAAOuD,WAAW,WAAIvD,EAAOF,QAE/BE,EAAOwD,WACNf,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oCAAmCC,SAC7C3C,EAAOwD,eAIdX,EAAAA,EAAAA,MAAA,OAAKH,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,QAAMC,UAAW,sEA/FHe,KACtB,OAAOA,EAAOC,eACZ,IAAK,UAEL,IAAK,SACH,MAAO,8BACT,IAAK,UACH,MAAO,0BACT,IAAK,cACH,MAAO,gCACT,QACE,MAAO,4BACX,EAmF+FC,CAAe3D,EAAOyD,UAAUd,SACpH3C,EAAOyD,SAETlB,EAAevC,UAIpByC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6CAA4CC,UACzDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wCAAuCC,SAAA,EACpDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,YACnDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,+CAA8CC,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,OAAKmB,MAAM,6BAA6BlB,UAAU,6BAA6BM,KAAK,OAAOC,QAAQ,YAAYY,OAAO,eAAclB,UAClIF,EAAAA,EAAAA,KAAA,QAAMqB,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGb,EAAE,6HAEtEpB,EAAa/B,EAAOgC,KACpBhC,EAAOiE,oBACNpB,EAAAA,EAAAA,MAAA,QAAMH,UAAU,6BAA4BC,SAAA,CAAC,kBACA,IAA3B3C,EAAOiE,mBAAyBhC,QAAQ,GAAG,eAKnEY,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,YACnDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,+CAA8CC,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,OAAKmB,MAAM,6BAA6BlB,UAAU,6BAA6BM,KAAK,OAAOC,QAAQ,YAAYY,OAAO,eAAclB,UAClIF,EAAAA,EAAAA,KAAA,QAAMqB,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGb,EAAE,kDA/I/De,KACpB,IAAKA,EAAU,MAAO,MAEtB,MAAMC,EAAW,IAAI/B,KAAK8B,GAAUE,UAE9BC,GADM,IAAIjC,MAAOgC,UACFD,EAGfG,EAAOC,KAAKC,MAAMH,EAAM,OACxBI,EAAQF,KAAKC,MAAOH,EAAM,MAAwB,MAClDK,EAAUH,KAAKC,MAAOH,EAAM,KAAmB,KAErD,OAAIC,EAAO,EACF,GAAGA,WAAcG,YAAgBC,YAC/BD,EAAQ,EACV,GAAGA,YAAgBC,YAEnB,GAAGA,WACZ,EA+HaC,CAAa3E,EAAO4E,kBAGzB/B,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,sBACnDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uCAAsCC,SAAA,CAClD3C,EAAO6E,kBAAoB,UAC3B7E,EAAO6E,mBAAqB7E,EAAO8E,gBAClCjC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,+BAA8BC,SAAA,CAAC,SACrC3C,EAAO8E,eAAiB,4BAU7CjC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gCAA+BC,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,UACvCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,6BAA6B,aAAW,OAAMC,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,UACEsC,QAASA,IAAMjE,EAAa,YAC5B4B,WACgB,aAAd7B,EACI,oCACA,8EAHK,8DAImD8B,SAC/D,cAGDF,EAAAA,EAAAA,KAAA,UACEsC,QAASA,IAAMjE,EAAa,SAC5B4B,WACgB,UAAd7B,EACI,oCACA,8EAHK,8DAImD8B,SAC/D,oBAGDF,EAAAA,EAAAA,KAAA,UACEsC,QAASA,IAAMjE,EAAa,YAC5B4B,WACgB,aAAd7B,EACI,oCACA,8EAHK,8DAImD8B,SAC/D,cAGDF,EAAAA,EAAAA,KAAA,UACEsC,QAASA,IAAMjE,EAAa,OAC5B4B,WACgB,QAAd7B,EACI,oCACA,8EAHK,8DAImD8B,SAC/D,2BAOLE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,MAAKC,SAAA,CACH,aAAd9B,IACCgC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWC,SAAA,EACxBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAAC,wBACjEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wCAAuCC,SAAA,EACpDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,cACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAE3C,EAAOqD,eAEtDR,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,UACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uCAAsCC,SAAE3C,EAAOF,WAEhE+C,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,gBACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAE3C,EAAOuD,iBAEtDV,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,iBACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAE3C,EAAOgF,aAAe,YAErEnC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,aACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAET,EAAWlC,EAAOiF,eAEjEpC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,eACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAET,EAAWlC,EAAO4E,uBAKrE/B,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAAC,mBACjEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wCAAuCC,SAAA,EACpDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,kBACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SACxCJ,EAAevC,SAGpB6C,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,iBACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SACxC3C,EAAOsD,SAAW,WAAa,qBAGpCT,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,qBACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SACxC3C,EAAOkF,iBAAmB,YAG/BrC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,iBACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SACxC3C,EAAOmF,QAAU,YAGtBtC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,wBACnDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,6BAA4BC,SAAA,CACxC3C,EAAOoF,SAAW,WAAa,eAC/BpF,EAAOiE,oBACNpB,EAAAA,EAAAA,MAAA,QAAMH,UAAU,6BAA4BC,SAAA,CAAC,YACN,IAA3B3C,EAAOiE,mBAAyBhC,QAAQ,GAAG,eAK7DY,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,eACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SACxC3C,EAAOqF,UAAY,MAAQ,gBAMnCrF,EAAOsF,aAAeC,OAAOC,KAAKxF,EAAOsF,aAAaG,OAAS,IAC9D5C,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAAC,qBACjEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,SACnD4C,OAAOG,QAAQ1F,EAAOsF,aAAaK,KAAIC,IAAA,IAAEC,EAAKC,GAAMF,EAAA,OACnD/C,EAAAA,EAAAA,MAAA,OAAeH,UAAU,gBAAeC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAEkD,KACpDpD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAEoD,OAAOD,OAF5CD,EAGJ,YAQH,UAAdhF,IACCgC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWC,SAAA,EACxBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAAC,6BACjEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wCAAuCC,SAAA,EACpDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,YACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAEZ,EAAa/B,EAAOgC,WAEnEa,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,cACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAE3C,EAAOgG,UAAY,YAElEnD,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,eACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAE3C,EAAOiG,WAAa,YAEnEpD,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,qBACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAE3C,EAAOkG,iBAAmB,iBAK5ElG,EAAOmG,SAAWZ,OAAOC,KAAKxF,EAAOmG,SAASV,OAAS,IACtD5C,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAAC,wBACjEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,SACnD4C,OAAOG,QAAQ1F,EAAOmG,SAASR,KAAIS,IAAA,IAAEP,EAAKC,GAAMM,EAAA,MAC9B,kBAAVN,GACLjD,EAAAA,EAAAA,MAAA,OAAeH,UAAU,gBAAeC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAEkD,KACpDpD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAEoD,OAAOD,OAF5CD,GAIR,IAAI,YAQL,aAAdhF,IACCgC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWC,SAAA,EACxBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAAC,uBACjEE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wCAAuCC,SAAA,EACpDE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,sBACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uCAAsCC,SAAE3C,EAAO6E,kBAAoB,YAEpFhC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAC,mBACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uCAAsCC,SAAE3C,EAAO8E,eAAiB,iBAKpF9E,EAAOqG,cAAgBd,OAAOC,KAAKxF,EAAOqG,cAAcZ,OAAS,IAChE5C,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAAC,kBACjEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,SACnD4C,OAAOG,QAAQ1F,EAAOqG,cAAcV,KAAIW,IAAA,IAAET,EAAKC,GAAMQ,EAAA,OACpDzD,EAAAA,EAAAA,MAAA,OAAeH,UAAU,gBAAeC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAEkD,KACpDpD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAEoD,OAAOD,OAF5CD,EAGJ,SAMb7F,EAAOuG,QAAUhB,OAAOC,KAAKxF,EAAOuG,QAAQd,OAAS,IACpD5C,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAAC,mBACjEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,SACnD4C,OAAOG,QAAQ1F,EAAOuG,QAAQZ,KAAIa,IAAA,IAAEX,EAAKC,GAAMU,EAAA,OAC9C3D,EAAAA,EAAAA,MAAA,OAAeH,UAAU,gBAAeC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,SAAEkD,KACpDpD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SAAE8D,KAAKC,UAAUZ,OAFpDD,EAGJ,YAQH,QAAdhF,IACC4B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,4BAA2BC,SAAA,EACxCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8CAA6CC,SAAC,sBAC5DF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CACHC,GAAG,OACHL,UAAU,iOAAgOC,SAC3O,oBAKFpC,GACCkC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,UACpDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gFAEf/B,GACF8B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,UACvCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mCAAkCC,SAAC,uBACjDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACxCF,EAAAA,EAAAA,KAAA,KAAAE,SAAIhC,aAKK,IAAfR,EAAIsF,QACN5C,EAAAA,EAAAA,MAAA,OAAKH,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAkCM,KAAK,OAAOC,QAAQ,YAAYY,OAAO,eAAclB,UACpGF,EAAAA,EAAAA,KAAA,QAAMqB,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGb,EAAE,8MAEvEV,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yCAAwCC,SAAC,yBACvDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,kEAG5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wEAAuEC,UACpFE,EAAAA,EAAAA,MAAA,SAAOH,UAAU,sCAAqCC,SAAA,EACpDF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,UAC3BE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIkE,MAAM,MAAMjE,UAAU,yEAAwEC,SAAC,UAGnGF,EAAAA,EAAAA,KAAA,MAAIkE,MAAM,MAAMjE,UAAU,4DAA2DC,SAAC,YAGtFF,EAAAA,EAAAA,KAAA,MAAIkE,MAAM,MAAMjE,UAAU,4DAA2DC,SAAC,UAGtFF,EAAAA,EAAAA,KAAA,MAAIkE,MAAM,MAAMjE,UAAU,4DAA2DC,SAAC,YAGtFF,EAAAA,EAAAA,KAAA,MAAIkE,MAAM,MAAMjE,UAAU,oCAAmCC,UAC3DF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAC,oBAIhCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,oCAAmCC,SACjDxC,EAAIwF,KAAKiB,IAgCN/D,EAAAA,EAAAA,MAAA,MAAkBH,UAAU,mBAAkBC,SAAA,EAC5CE,EAAAA,EAAAA,MAAA,MAAIH,UAAU,6EAA4EC,SAAA,EACxFF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAI,QAAQ6D,EAAG9G,OAAQ4C,UAAU,wCAAuCC,SAC3EiE,EAAGC,SAENhE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uCAAsCC,SAAA,CAClDiE,EAAG9G,KAAKgH,UAAU,EAAG,GAAG,aAG7BrE,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCC,UACjDF,EAAAA,EAAAA,KAAA,QAAMC,UAAW,iEA5BGqE,KACxB,OAAOA,EAAMrD,eACX,IAAK,UACH,MAAO,8BACT,IAAK,UACH,MAAO,4BACT,IAAK,eACH,MAAO,4BACT,IAAK,SAEL,IAAK,YACH,MAAO,0BACT,QACE,MAAO,gCACX,EAcsFsD,CAAiBJ,EAAGG,SAASpE,SAC5GiE,EAAGG,WAGRtE,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDC,SAC9DiE,EAAGK,SAENxE,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDC,SA9C/DiE,EAAG5E,IACE,IAAI4E,EAAG5E,IAAM,MAAMC,QAAQ,QACzB2E,EAAGM,OACL,IAAIN,EAAGM,OAAM,YAAyBjF,QAAQ,QAC5C2E,EAAGO,oBACL,IAAIP,EAAGO,oBAAsB,MAAMlF,QAAQ,QAE7C,SA0CLQ,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mFAAkFC,UAC9FE,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAI,QAAQ6D,EAAG9G,OAAQ4C,UAAU,wCAAuCC,SAAA,CAAC,QACzEE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,UAASC,SAAA,CAAC,KAAGiE,EAAGC,gBAtBjCD,EAAG9G,2BAuClC+C,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uIAAsIC,SAAA,EACnJE,EAAAA,EAAAA,MAAA,UACEuE,KAAK,SACL1E,UAAU,uNAAsNC,SAAA,EAEhOF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAmCkB,MAAM,6BAA6BZ,KAAK,OAAOC,QAAQ,YAAYY,OAAO,eAAclB,UACxIF,EAAAA,EAAAA,KAAA,QAAMqB,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGb,EAAE,kHACjE,aAGNnD,EAAOsD,WACPT,EAAAA,EAAAA,MAAA,UACEuE,KAAK,SACL1E,UAAU,kOAAiOC,SAAA,EAE3OF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAqCkB,MAAM,6BAA6BZ,KAAK,OAAOC,QAAQ,YAAYY,OAAO,eAAclB,UAC1IF,EAAAA,EAAAA,KAAA,QAAMqB,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGb,EAAE,2IACjE,4BAKR,C","sources":["pages/ServerDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getServer, getVMsByServer } from '../services/api';\n\ninterface Server {\n  uuid: string;\n  hostname: string;\n  status: string;\n  datacenter: string;\n  ram?: number;\n  memory_total_bytes?: number;\n  memory_available_bytes?: number;\n  disk_total_bytes?: number;\n  disk_available_bytes?: number;\n  cpu_type?: string;\n  cpu_cores?: number;\n  headnode?: boolean;\n  setup?: boolean;\n  setting_up?: boolean;\n  created?: string;\n  last_boot?: string;\n  current_platform?: string;\n  boot_platform?: string;\n  reservation_ratio?: number;\n  reserved?: boolean;\n  reservoir?: boolean;\n  system_type?: string;\n  comments?: string;\n  default_console?: string;\n  serial?: string;\n  traits?: Record<string, any>;\n  boot_params?: Record<string, any>;\n  kernel_flags?: Record<string, any>;\n  rack_identifier?: string;\n  sysinfo?: {\n    'Live Image'?: string;\n    Manufacturer?: string;\n    'Product'?: string;\n    [key: string]: any;\n  };\n}\n\ninterface VM {\n  uuid: string;\n  alias: string;\n  state: string;\n  brand: string;\n  ram?: number;\n  memory?: number;\n  quota?: number;\n  disk?: number;\n  vcpus?: number;\n  owner_uuid: string;\n  ips?: string[];\n  nics?: {\n    interface?: string;\n    mac?: string;\n    ip?: string;\n    ips?: string[];\n    primary?: boolean;\n    netmask?: string;\n    network_uuid?: string;\n  }[];\n  image_uuid?: string;\n  billing_id?: string;\n  package_uuid?: string;\n  server_uuid?: string;\n  create_timestamp?: string;\n  created_at?: string;\n  tags?: any;\n  customer_metadata?: any;\n  internal_metadata?: any;\n  cpu_cap?: number;\n  cpu_shares?: number;\n  dns_domain?: string;\n  autoboot?: boolean;\n  max_physical_memory?: number;\n}\n\nconst ServerDetail = () => {\n  const { uuid } = useParams<{ uuid: string }>();\n  const [server, setServer] = useState<Server | null>(null);\n  const [vms, setVMs] = useState<VM[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [vmsLoading, setVMsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [vmsError, setVMsError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState('overview');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!uuid) return;\n\n      try {\n        setLoading(true);\n        const serverResponse = await getServer(uuid);\n        const serverData = serverResponse.data;\n        setServer(serverData);\n        setError(null);\n      } catch (err: any) {\n        setError(err.response?.data?.message || 'Failed to fetch server details');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [uuid]);\n  \n  useEffect(() => {\n    const fetchVMs = async () => {\n      if (!uuid) return;\n\n      try {\n        setVMsLoading(true);\n        const vmsResponse = await getVMsByServer(uuid);\n        setVMs(vmsResponse.data);\n        setVMsError(null);\n      } catch (err: any) {\n        setVMsError(err.response?.data?.message || 'Failed to fetch virtual machines');\n      } finally {\n        setVMsLoading(false);\n      }\n    };\n\n    fetchVMs();\n  }, [uuid]);\n\n  const formatMemory = (ram?: number): string => {\n    if (!ram) return 'N/A';\n    const gb = ram / 1024;\n    return `${gb.toFixed(1)} GB`;\n  };\n\n  const formatDate = (dateString?: string): string => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleDateString() + ' ' + new Date(dateString).toLocaleTimeString();\n  };\n\n  const formatUptime = (lastBoot?: string): string => {\n    if (!lastBoot) return 'N/A';\n    \n    const bootTime = new Date(lastBoot).getTime();\n    const now = new Date().getTime();\n    const diffMs = now - bootTime;\n    \n    // Convert to days, hours, minutes\n    const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((diffMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const minutes = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\n    \n    if (days > 0) {\n      return `${days} days, ${hours} hours, ${minutes} minutes`;\n    } else if (hours > 0) {\n      return `${hours} hours, ${minutes} minutes`;\n    } else {\n      return `${minutes} minutes`;\n    }\n  };\n\n  const getStatusColor = (status: string): string => {\n    switch(status.toLowerCase()) {\n      case 'running':\n        return 'bg-green-100 text-green-800';\n      case 'online':\n        return 'bg-green-100 text-green-800';\n      case 'offline':\n        return 'bg-red-100 text-red-800';\n      case 'maintenance':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getSetupStatus = (server: Server) => {\n    if (server.setting_up) {\n      return (\n        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">\n          Setting up\n        </span>\n      );\n    } else if (server.setup) {\n      return (\n        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n          Setup complete\n        </span>\n      );\n    } else {\n      return (\n        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800\">\n          Setup needed\n        </span>\n      );\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n      </div>\n    );\n  }\n\n  if (error || !server) {\n    return (\n      <div className=\"rounded-md bg-red-50 p-4 m-4\">\n        <div className=\"flex\">\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-red-800\">Error loading server details</h3>\n            <div className=\"mt-2 text-sm text-red-700\">\n              <p>{error || 'Server data not available'}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"px-4 sm:px-6 lg:px-8 py-6\">\n      {/* Breadcrumb */}\n      <nav className=\"mb-4 text-sm\" aria-label=\"Breadcrumb\">\n        <ol className=\"flex items-center space-x-2\">\n          <li>\n            <Link to=\"/servers\" className=\"text-gray-500 hover:text-gray-700\">Servers</Link>\n          </li>\n          <li className=\"flex items-center\">\n            <svg className=\"h-5 w-5 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n            </svg>\n            <span className=\"ml-2 text-gray-700 font-medium\">{server.hostname}</span>\n          </li>\n        </ol>\n      </nav>\n\n      {/* Header with server name and quick stats */}\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg mb-6\">\n        <div className=\"px-4 py-5 sm:px-6 flex justify-between items-start\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\n              {server.hostname}\n              {server.headnode && <span className=\"ml-2 px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-indigo-100 text-indigo-800\">Headnode</span>}\n            </h1>\n            <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n              {server.datacenter} • {server.uuid}\n            </p>\n            {server.comments && (\n              <p className=\"mt-1 text-sm text-gray-600 italic\">\n                {server.comments}\n              </p>\n            )}\n          </div>\n          <div className=\"flex space-x-3\">\n            <span className={`px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full ${getStatusColor(server.status)}`}>\n              {server.status}\n            </span>\n            {getSetupStatus(server)}\n          </div>\n        </div>\n\n        <div className=\"border-t border-gray-200 px-4 py-5 sm:px-6\">\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-3\">\n            <div className=\"sm:col-span-1\">\n              <div className=\"text-sm font-medium text-gray-500\">Memory</div>\n              <div className=\"mt-1 text-sm text-gray-900 flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-gray-400 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n                {formatMemory(server.ram)}\n                {server.reservation_ratio && (\n                  <span className=\"ml-2 text-xs text-gray-500\">\n                    (Reservation: {(server.reservation_ratio * 100).toFixed(0)}%)\n                  </span>\n                )}\n              </div>\n            </div>\n            <div className=\"sm:col-span-1\">\n              <div className=\"text-sm font-medium text-gray-500\">Uptime</div>\n              <div className=\"mt-1 text-sm text-gray-900 flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-gray-400 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                {formatUptime(server.last_boot)}\n              </div>\n            </div>\n            <div className=\"sm:col-span-1\">\n              <div className=\"text-sm font-medium text-gray-500\">Current Platform</div>\n              <div className=\"mt-1 text-sm text-gray-900 font-mono\">\n                {server.current_platform || 'unknown'}\n                {server.current_platform !== server.boot_platform && (\n                  <div className=\"mt-1 text-yellow-600 text-xs\">\n                    Boot: {server.boot_platform || 'unknown'}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tabbed interface */}\n      <div className=\"bg-white shadow sm:rounded-lg\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8 px-6\" aria-label=\"Tabs\">\n            <button\n              onClick={() => setActiveTab('overview')}\n              className={`${\n                activeTab === 'overview'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Overview\n            </button>\n            <button\n              onClick={() => setActiveTab('specs')}\n              className={`${\n                activeTab === 'specs'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Specifications\n            </button>\n            <button\n              onClick={() => setActiveTab('settings')}\n              className={`${\n                activeTab === 'settings'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Settings\n            </button>\n            <button\n              onClick={() => setActiveTab('vms')}\n              className={`${\n                activeTab === 'vms'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Virtual Machines\n            </button>\n          </nav>\n        </div>\n\n        {/* Tab content */}\n        <div className=\"p-6\">\n          {activeTab === 'overview' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Server Information</h3>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Hostname</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{server.hostname}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">UUID</div>\n                    <div className=\"mt-1 text-sm text-gray-900 font-mono\">{server.uuid}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Datacenter</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{server.datacenter}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">System Type</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{server.system_type || 'N/A'}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Created</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{formatDate(server.created)}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Last Boot</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{formatDate(server.last_boot)}</div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Configuration</h3>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Setup Status</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      {getSetupStatus(server)}\n                    </div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Server Role</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      {server.headnode ? 'Headnode' : 'Compute Node'}\n                    </div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Default Console</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      {server.default_console || 'N/A'}\n                    </div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Serial Port</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      {server.serial || 'N/A'}\n                    </div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Reservation Status</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      {server.reserved ? 'Reserved' : 'Not Reserved'}\n                      {server.reservation_ratio && (\n                        <span className=\"ml-2 text-xs text-gray-500\">\n                          (Ratio: {(server.reservation_ratio * 100).toFixed(0)}%)\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Reservoir</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      {server.reservoir ? 'Yes' : 'No'}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {server.boot_params && Object.keys(server.boot_params).length > 0 && (\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Boot Parameters</h3>\n                  <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                    {Object.entries(server.boot_params).map(([key, value]) => (\n                      <div key={key} className=\"sm:col-span-1\">\n                        <div className=\"text-sm font-medium text-gray-500\">{key}</div>\n                        <div className=\"mt-1 text-sm text-gray-900\">{String(value)}</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'specs' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Hardware Specifications</h3>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Memory</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{formatMemory(server.ram)}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">CPU Type</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{server.cpu_type || 'N/A'}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">CPU Cores</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{server.cpu_cores || 'N/A'}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Rack Identifier</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{server.rack_identifier || 'N/A'}</div>\n                  </div>\n                </div>\n              </div>\n\n              {server.sysinfo && Object.keys(server.sysinfo).length > 0 && (\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">System Information</h3>\n                  <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                    {Object.entries(server.sysinfo).map(([key, value]) => (\n                      typeof value !== 'object' ? (\n                        <div key={key} className=\"sm:col-span-1\">\n                          <div className=\"text-sm font-medium text-gray-500\">{key}</div>\n                          <div className=\"mt-1 text-sm text-gray-900\">{String(value)}</div>\n                        </div>\n                      ) : null\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'settings' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Platform Settings</h3>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Current Platform</div>\n                    <div className=\"mt-1 text-sm text-gray-900 font-mono\">{server.current_platform || 'N/A'}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Boot Platform</div>\n                    <div className=\"mt-1 text-sm text-gray-900 font-mono\">{server.boot_platform || 'N/A'}</div>\n                  </div>\n                </div>\n              </div>\n\n              {server.kernel_flags && Object.keys(server.kernel_flags).length > 0 && (\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Kernel Flags</h3>\n                  <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                    {Object.entries(server.kernel_flags).map(([key, value]) => (\n                      <div key={key} className=\"sm:col-span-1\">\n                        <div className=\"text-sm font-medium text-gray-500\">{key}</div>\n                        <div className=\"mt-1 text-sm text-gray-900\">{String(value)}</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {server.traits && Object.keys(server.traits).length > 0 && (\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Server Traits</h3>\n                  <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                    {Object.entries(server.traits).map(([key, value]) => (\n                      <div key={key} className=\"sm:col-span-1\">\n                        <div className=\"text-sm font-medium text-gray-500\">{key}</div>\n                        <div className=\"mt-1 text-sm text-gray-900\">{JSON.stringify(value)}</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'vms' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Virtual Machines</h3>\n                  <Link\n                    to=\"/vms\"\n                    className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  >\n                    View All VMs\n                  </Link>\n                </div>\n                \n                {vmsLoading ? (\n                  <div className=\"flex justify-center items-center h-32\">\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-indigo-500\"></div>\n                  </div>\n                ) : vmsError ? (\n                  <div className=\"rounded-md bg-red-50 p-4\">\n                    <div className=\"flex\">\n                      <div className=\"ml-3\">\n                        <h3 className=\"text-sm font-medium text-red-800\">Error loading VMs</h3>\n                        <div className=\"mt-2 text-sm text-red-700\">\n                          <p>{vmsError}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ) : vms.length === 0 ? (\n                  <div className=\"text-center py-6\">\n                    <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 7a2 2 0 012-2h2a2 2 0 012 2m0 10V7m0 10a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2h-2a2 2 0 00-2 2\" />\n                    </svg>\n                    <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No Virtual Machines</h3>\n                    <p className=\"mt-1 text-sm text-gray-500\">No virtual machines are currently running on this server.</p>\n                  </div>\n                ) : (\n                  <div className=\"overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg\">\n                    <table className=\"min-w-full divide-y divide-gray-300\">\n                      <thead className=\"bg-gray-50\">\n                        <tr>\n                          <th scope=\"col\" className=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6\">\n                            Name\n                          </th>\n                          <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                            Status\n                          </th>\n                          <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                            Type\n                          </th>\n                          <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                            Memory\n                          </th>\n                          <th scope=\"col\" className=\"relative py-3.5 pl-3 pr-4 sm:pr-6\">\n                            <span className=\"sr-only\">Actions</span>\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"divide-y divide-gray-200 bg-white\">\n                        {vms.map((vm) => {\n                          // Format VM memory\n                          const formatVMMemory = (): string => {\n                            if (vm.ram) {\n                              return `${(vm.ram / 1024).toFixed(1)} GB`;\n                            } else if (vm.memory) {\n                              return `${(vm.memory / (1024 * 1024 * 1024)).toFixed(1)} GB`;\n                            } else if (vm.max_physical_memory) {\n                              return `${(vm.max_physical_memory / 1024).toFixed(1)} GB`;\n                            }\n                            return 'N/A';\n                          };\n                          \n                          // Get status color\n                          const getVMStatusColor = (state: string): string => {\n                            switch(state.toLowerCase()) {\n                              case 'running':\n                                return 'bg-green-100 text-green-800';\n                              case 'stopped':\n                                return 'bg-gray-100 text-gray-800';\n                              case 'provisioning':\n                                return 'bg-blue-100 text-blue-800';\n                              case 'failed':\n                                return 'bg-red-100 text-red-800';\n                              case 'destroyed':\n                                return 'bg-red-100 text-red-800';\n                              default:\n                                return 'bg-yellow-100 text-yellow-800';\n                            }\n                          };\n                          \n                          return (\n                            <tr key={vm.uuid} className=\"hover:bg-gray-50\">\n                              <td className=\"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6\">\n                                <Link to={`/vms/${vm.uuid}`} className=\"text-indigo-600 hover:text-indigo-900\">\n                                  {vm.alias}\n                                </Link>\n                                <div className=\"text-xs text-gray-500 font-mono mt-1\">\n                                  {vm.uuid.substring(0, 8)}...\n                                </div>\n                              </td>\n                              <td className=\"whitespace-nowrap px-3 py-4 text-sm\">\n                                <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getVMStatusColor(vm.state)}`}>\n                                  {vm.state}\n                                </span>\n                              </td>\n                              <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                                {vm.brand}\n                              </td>\n                              <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                                {formatVMMemory()}\n                              </td>\n                              <td className=\"relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6\">\n                                <Link to={`/vms/${vm.uuid}`} className=\"text-indigo-600 hover:text-indigo-900\">\n                                  View<span className=\"sr-only\">, {vm.alias}</span>\n                                </Link>\n                              </td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Action buttons */}\n      <div className=\"mt-6 flex flex-col-reverse space-y-4 space-y-reverse sm:flex-row-reverse sm:justify-end sm:space-y-0 sm:space-x-3 sm:space-x-reverse\">\n        <button\n          type=\"button\"\n          className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          <svg className=\"-ml-1 mr-2 h-5 w-5 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n          </svg>\n          Reboot\n        </button>\n        {!server.headnode && (\n          <button\n            type=\"button\"\n            className=\"inline-flex items-center px-4 py-2 border border-yellow-300 shadow-sm text-sm font-medium rounded-md text-yellow-700 bg-yellow-50 hover:bg-yellow-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\"\n          >\n            <svg className=\"-ml-1 mr-2 h-5 w-5 text-yellow-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n            </svg>\n            Enter Maintenance\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ServerDetail;"],"names":["ServerDetail","uuid","useParams","server","setServer","useState","vms","setVMs","loading","setLoading","vmsLoading","setVMsLoading","error","setError","vmsError","setVMsError","activeTab","setActiveTab","useEffect","async","serverData","getServer","data","err","_err$response","_err$response$data","response","message","fetchData","vmsResponse","getVMsByServer","_err$response2","_err$response2$data","fetchVMs","formatMemory","ram","toFixed","formatDate","dateString","Date","toLocaleDateString","toLocaleTimeString","getSetupStatus","setting_up","_jsx","className","children","setup","_jsxs","Link","to","fill","viewBox","fillRule","d","clipRule","hostname","headnode","datacenter","comments","status","toLowerCase","getStatusColor","xmlns","stroke","strokeLinecap","strokeLinejoin","strokeWidth","reservation_ratio","lastBoot","bootTime","getTime","diffMs","days","Math","floor","hours","minutes","formatUptime","last_boot","current_platform","boot_platform","onClick","system_type","created","default_console","serial","reserved","reservoir","boot_params","Object","keys","length","entries","map","_ref","key","value","String","cpu_type","cpu_cores","rack_identifier","sysinfo","_ref2","kernel_flags","_ref3","traits","_ref4","JSON","stringify","scope","vm","alias","substring","state","getVMStatusColor","brand","memory","max_physical_memory","type"],"sourceRoot":""}