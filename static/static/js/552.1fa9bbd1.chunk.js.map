{"version":3,"file":"static/js/552.1fa9bbd1.chunk.js","mappings":"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","sources":["pages/PackageDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getPackage } from '../services/api';\n\ninterface Package {\n  uuid: string;\n  name: string;\n  version?: string;\n  memory?: number;\n  max_physical_memory?: number;\n  disk?: number;\n  quota?: number;\n  vcpus?: number;\n  cpu_cap?: number;\n  active: boolean;\n  description?: string;\n  swap?: number;\n  max_swap?: number;\n  owner_uuids?: string[];\n  default?: boolean;\n  created_at?: string;\n  updated_at?: string;\n  v?: number;\n  brand?: string;\n  group?: string;\n  max_lwps?: number;\n  zfs_io_priority?: number;\n  billing_tag?: string;\n  flexible_disk?: boolean;\n}\n\nconst PackageDetail = () => {\n  const { uuid } = useParams<{ uuid: string }>();\n  const [pkg, setPackage] = useState<Package | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState('overview');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!uuid) return;\n\n      try {\n        setLoading(true);\n        const packageResponse = await getPackage(uuid);\n        const packageData = packageResponse.data;\n        setPackage(packageData);\n        setError(null);\n      } catch (err: any) {\n        setError(err.response?.data?.message || 'Failed to fetch package details');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [uuid]);\n\n  const formatMemory = (megabytes?: number): string => {\n    if (!megabytes) return 'N/A';\n    if (megabytes >= 1024) {\n      return `${(megabytes / 1024).toFixed(1)} GB`;\n    }\n    return `${megabytes} MB`;\n  };\n\n  const formatDisk = (megabytes?: number): string => {\n    if (!megabytes) return 'N/A';\n    if (megabytes >= 1024) {\n      return `${Math.floor(megabytes / 1024)} GB`;\n    }\n    return `${megabytes} MB`;\n  };\n\n  const formatDate = (dateString?: string): string => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleDateString() + ' ' + new Date(dateString).toLocaleTimeString();\n  };\n\n  const getStatusColor = (active: boolean): string => {\n    return active\n      ? 'bg-green-100 text-green-800'\n      : 'bg-gray-100 text-gray-800';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n      </div>\n    );\n  }\n\n  if (error || !pkg) {\n    return (\n      <div className=\"rounded-md bg-red-50 p-4 m-4\">\n        <div className=\"flex\">\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-red-800\">Error loading package details</h3>\n            <div className=\"mt-2 text-sm text-red-700\">\n              <p>{error || 'Package data not available'}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"px-4 sm:px-6 lg:px-8 py-6\">\n      {/* Breadcrumb */}\n      <nav className=\"mb-4 text-sm\" aria-label=\"Breadcrumb\">\n        <ol className=\"flex items-center space-x-2\">\n          <li>\n            <Link to=\"/packages\" className=\"text-gray-500 hover:text-gray-700\">Packages</Link>\n          </li>\n          <li className=\"flex items-center\">\n            <svg className=\"h-5 w-5 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n            </svg>\n            <span className=\"ml-2 text-gray-700 font-medium\">{pkg.name}</span>\n          </li>\n        </ol>\n      </nav>\n\n      {/* Header with package name and quick stats */}\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg mb-6\">\n        <div className=\"px-4 py-5 sm:px-6 flex justify-between items-start\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\n              {pkg.name}\n              {pkg.version && <span className=\"ml-2 text-gray-500 text-sm\">{pkg.version}</span>}\n              {pkg.default && (\n                <span className=\"ml-2 px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-indigo-100 text-indigo-800\">\n                  Default\n                </span>\n              )}\n            </h1>\n            <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n              {pkg.uuid}\n            </p>\n            {pkg.description && (\n              <p className=\"mt-1 text-sm text-gray-600 italic\">\n                {pkg.description}\n              </p>\n            )}\n          </div>\n          <div className=\"flex space-x-3\">\n            <span className={`px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full ${getStatusColor(pkg.active)}`}>\n              {pkg.active ? 'Active' : 'Inactive'}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"border-t border-gray-200 px-4 py-5 sm:px-6\">\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-4\">\n            <div className=\"sm:col-span-1\">\n              <div className=\"text-sm font-medium text-gray-500\">Memory</div>\n              <div className=\"mt-1 text-sm text-gray-900 flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-gray-400 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n                {formatMemory(pkg.memory || pkg.max_physical_memory)}\n              </div>\n            </div>\n            <div className=\"sm:col-span-1\">\n              <div className=\"text-sm font-medium text-gray-500\">Disk</div>\n              <div className=\"mt-1 text-sm text-gray-900 flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-gray-400 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01\" />\n                </svg>\n                {formatDisk(pkg.disk || pkg.quota)}\n                {pkg.flexible_disk && (\n                  <span className=\"ml-1 text-xs text-indigo-600\">(Flexible)</span>\n                )}\n              </div>\n            </div>\n            <div className=\"sm:col-span-1\">\n              <div className=\"text-sm font-medium text-gray-500\">vCPUs</div>\n              <div className=\"mt-1 text-sm text-gray-900 flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-gray-400 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n                {pkg.vcpus || 'N/A'}\n              </div>\n            </div>\n            <div className=\"sm:col-span-1\">\n              <div className=\"text-sm font-medium text-gray-500\">Brand</div>\n              <div className=\"mt-1 text-sm text-gray-900\">\n                {pkg.brand || 'Any'}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tabbed interface */}\n      <div className=\"bg-white shadow sm:rounded-lg\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8 px-6\" aria-label=\"Tabs\">\n            <button\n              onClick={() => setActiveTab('overview')}\n              className={`${\n                activeTab === 'overview'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Overview\n            </button>\n            <button\n              onClick={() => setActiveTab('resources')}\n              className={`${\n                activeTab === 'resources'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Resources\n            </button>\n            <button\n              onClick={() => setActiveTab('usage')}\n              className={`${\n                activeTab === 'usage'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Usage\n            </button>\n          </nav>\n        </div>\n\n        {/* Tab content */}\n        <div className=\"p-6\">\n          {activeTab === 'overview' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Package Information</h3>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Name</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{pkg.name}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">UUID</div>\n                    <div className=\"mt-1 text-sm text-gray-900 font-mono\">{pkg.uuid}</div>\n                  </div>\n                  {pkg.version && (\n                    <div className=\"sm:col-span-1\">\n                      <div className=\"text-sm font-medium text-gray-500\">Version</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">{pkg.version}</div>\n                    </div>\n                  )}\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Status</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(pkg.active)}`}>\n                        {pkg.active ? 'Active' : 'Inactive'}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Default Package</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{pkg.default ? 'Yes' : 'No'}</div>\n                  </div>\n                  {pkg.brand && (\n                    <div className=\"sm:col-span-1\">\n                      <div className=\"text-sm font-medium text-gray-500\">Brand</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">{pkg.brand}</div>\n                    </div>\n                  )}\n                  {pkg.group && (\n                    <div className=\"sm:col-span-1\">\n                      <div className=\"text-sm font-medium text-gray-500\">Group</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">{pkg.group}</div>\n                    </div>\n                  )}\n                  {pkg.created_at && (\n                    <div className=\"sm:col-span-1\">\n                      <div className=\"text-sm font-medium text-gray-500\">Created</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">{formatDate(pkg.created_at)}</div>\n                    </div>\n                  )}\n                  {pkg.updated_at && (\n                    <div className=\"sm:col-span-1\">\n                      <div className=\"text-sm font-medium text-gray-500\">Updated</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">{formatDate(pkg.updated_at)}</div>\n                    </div>\n                  )}\n                  {pkg.description && (\n                    <div className=\"sm:col-span-2\">\n                      <div className=\"text-sm font-medium text-gray-500\">Description</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">{pkg.description}</div>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {pkg.owner_uuids && pkg.owner_uuids.length > 0 && (\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Owner Information</h3>\n                  <div className=\"space-y-2\">\n                    {pkg.owner_uuids.map((owner, idx) => (\n                      <div key={idx} className=\"text-sm text-gray-900 font-mono\">{owner}</div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'resources' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Resource Limits</h3>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Memory (RAM)</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{formatMemory(pkg.memory || pkg.max_physical_memory)}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Disk</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      {formatDisk(pkg.disk || pkg.quota)} \n                      {pkg.flexible_disk && (\n                        <span className=\"ml-1 text-xs text-indigo-600\">(Flexible)</span>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">vCPUs</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{pkg.vcpus || 'N/A'}</div>\n                  </div>\n                  {pkg.cpu_cap !== undefined && (\n                    <div className=\"sm:col-span-1\">\n                      <div className=\"text-sm font-medium text-gray-500\">CPU Cap</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">{pkg.cpu_cap}%</div>\n                    </div>\n                  )}\n                  {pkg.swap !== undefined && (\n                    <div className=\"sm:col-span-1\">\n                      <div className=\"text-sm font-medium text-gray-500\">Swap</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">{formatMemory(pkg.swap)}</div>\n                    </div>\n                  )}\n                  {pkg.max_swap !== undefined && (\n                    <div className=\"sm:col-span-1\">\n                      <div className=\"text-sm font-medium text-gray-500\">Max Swap</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">{formatMemory(pkg.max_swap)}</div>\n                    </div>\n                  )}\n                  {pkg.max_lwps !== undefined && (\n                    <div className=\"sm:col-span-1\">\n                      <div className=\"text-sm font-medium text-gray-500\">Max Lightweight Processes</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">{pkg.max_lwps}</div>\n                    </div>\n                  )}\n                  {pkg.zfs_io_priority !== undefined && (\n                    <div className=\"sm:col-span-1\">\n                      <div className=\"text-sm font-medium text-gray-500\">ZFS I/O Priority</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">{pkg.zfs_io_priority}</div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'usage' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Package Usage</h3>\n                <div className=\"text-center py-6\">\n                  <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 7a2 2 0 012-2h2a2 2 0 012 2m0 10V7m0 10a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2h-2a2 2 0 00-2 2\" />\n                  </svg>\n                  <h3 className=\"mt-2 text-sm font-medium text-gray-900\">VM Usage Statistics</h3>\n                  <p className=\"mt-1 text-sm text-gray-500\">VM usage statistics will be available in a future update.</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Action buttons */}\n      <div className=\"mt-6 flex flex-col-reverse space-y-4 space-y-reverse sm:flex-row-reverse sm:justify-end sm:space-y-0 sm:space-x-3 sm:space-x-reverse\">\n        <button\n          type=\"button\"\n          className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          <svg className=\"-ml-1 mr-2 h-5 w-5 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\n          </svg>\n          Edit Package\n        </button>\n        <button\n          type=\"button\"\n          className=\"inline-flex items-center px-4 py-2 border border-indigo-300 shadow-sm text-sm font-medium rounded-md text-indigo-700 bg-white hover:bg-indigo-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          <svg className=\"-ml-1 mr-2 h-5 w-5 text-indigo-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\" />\n          </svg>\n          Create VM with Package\n        </button>\n        {pkg.active && (\n          <button\n            type=\"button\"\n            className=\"inline-flex items-center px-4 py-2 border border-red-300 shadow-sm text-sm font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n          >\n            <svg className=\"-ml-1 mr-2 h-5 w-5 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            Deactivate Package\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PackageDetail;"],"names":["PackageDetail","uuid","useParams","pkg","setPackage","useState","loading","setLoading","error","setError","activeTab","setActiveTab","useEffect","async","packageData","getPackage","data","err","_err$response","_err$response$data","response","message","fetchData","formatMemory","megabytes","toFixed","formatDisk","Math","floor","formatDate","dateString","Date","toLocaleDateString","toLocaleTimeString","getStatusColor","active","_jsx","className","children","_jsxs","Link","to","fill","viewBox","fillRule","d","clipRule","name","version","default","description","xmlns","stroke","strokeLinecap","strokeLinejoin","strokeWidth","memory","max_physical_memory","disk","quota","flexible_disk","vcpus","brand","onClick","group","created_at","updated_at","owner_uuids","length","map","owner","idx","undefined","cpu_cap","swap","max_swap","max_lwps","zfs_io_priority","type"],"sourceRoot":""}