{"version":3,"file":"static/js/895.2208e3b7.chunk.js","mappings":"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","sources":["pages/ImageDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getImage } from '../services/api';\n\ninterface Image {\n  uuid: string;\n  name: string;\n  version: string;\n  os: string;\n  state: string;\n  type: string;\n  published_at: string;\n  owner_uuid: string;\n  description?: string;\n  homepage?: string;\n  files?: {\n    compression?: string;\n    sha1?: string;\n    size?: number;\n    path?: string;\n  }[];\n  requirements?: {\n    min_memory?: number;\n    min_platform?: Record<string, string>;\n    brand?: string;\n  };\n  tags?: Record<string, string>;\n  icon?: string;\n  acl?: string[];\n}\n\nconst ImageDetail = () => {\n  const { uuid } = useParams<{ uuid: string }>();\n  const [image, setImage] = useState<Image | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState('overview');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!uuid) return;\n\n      try {\n        setLoading(true);\n        const imageResponse = await getImage(uuid);\n        const imageData = imageResponse.data;\n        setImage(imageData);\n        setError(null);\n      } catch (err: any) {\n        setError(err.response?.data?.message || 'Failed to fetch image details');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [uuid]);\n\n  const formatDate = (dateString?: string): string => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleDateString() + ' ' + new Date(dateString).toLocaleTimeString();\n  };\n\n  const formatFileSize = (sizeInBytes?: number): string => {\n    if (!sizeInBytes) return 'N/A';\n    \n    const kb = 1024;\n    const mb = kb * 1024;\n    const gb = mb * 1024;\n    \n    if (sizeInBytes >= gb) {\n      return `${(sizeInBytes / gb).toFixed(2)} GB`;\n    } else if (sizeInBytes >= mb) {\n      return `${(sizeInBytes / mb).toFixed(2)} MB`;\n    } else if (sizeInBytes >= kb) {\n      return `${(sizeInBytes / kb).toFixed(2)} KB`;\n    }\n    \n    return `${sizeInBytes} B`;\n  };\n\n  const formatMemory = (sizeInMB?: number): string => {\n    if (!sizeInMB) return 'N/A';\n    \n    if (sizeInMB >= 1024) {\n      return `${(sizeInMB / 1024).toFixed(1)} GB`;\n    }\n    \n    return `${sizeInMB} MB`;\n  };\n\n  const getStatusColor = (state: string): string => {\n    switch(state.toLowerCase()) {\n      case 'active':\n        return 'bg-green-100 text-green-800';\n      case 'disabled':\n        return 'bg-gray-100 text-gray-800';\n      case 'unactivated':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-blue-100 text-blue-800';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n      </div>\n    );\n  }\n\n  if (error || !image) {\n    return (\n      <div className=\"rounded-md bg-red-50 p-4 m-4\">\n        <div className=\"flex\">\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-red-800\">Error loading image details</h3>\n            <div className=\"mt-2 text-sm text-red-700\">\n              <p>{error || 'Image data not available'}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"px-4 sm:px-6 lg:px-8 py-6\">\n      {/* Breadcrumb */}\n      <nav className=\"mb-4 text-sm\" aria-label=\"Breadcrumb\">\n        <ol className=\"flex items-center space-x-2\">\n          <li>\n            <Link to=\"/images\" className=\"text-gray-500 hover:text-gray-700\">Images</Link>\n          </li>\n          <li className=\"flex items-center\">\n            <svg className=\"h-5 w-5 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n            </svg>\n            <span className=\"ml-2 text-gray-700 font-medium\">{image.name}</span>\n          </li>\n        </ol>\n      </nav>\n\n      {/* Header with image name and quick stats */}\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg mb-6\">\n        <div className=\"px-4 py-5 sm:px-6 flex justify-between items-start\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\n              {image.name} \n              <span className=\"ml-2 text-gray-500 text-sm\">{image.version}</span>\n            </h1>\n            <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n              {image.uuid}\n            </p>\n            {image.description && (\n              <p className=\"mt-1 text-sm text-gray-600 italic\">\n                {image.description}\n              </p>\n            )}\n          </div>\n          <div className=\"flex space-x-3\">\n            <span className={`px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full ${getStatusColor(image.state)}`}>\n              {image.state}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"border-t border-gray-200 px-4 py-5 sm:px-6\">\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-3\">\n            <div className=\"sm:col-span-1\">\n              <div className=\"text-sm font-medium text-gray-500\">OS</div>\n              <div className=\"mt-1 text-sm text-gray-900 flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-gray-400 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n                {image.os}\n              </div>\n            </div>\n            <div className=\"sm:col-span-1\">\n              <div className=\"text-sm font-medium text-gray-500\">Type</div>\n              <div className=\"mt-1 text-sm text-gray-900 flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-gray-400 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01\" />\n                </svg>\n                {image.type}\n              </div>\n            </div>\n            <div className=\"sm:col-span-1\">\n              <div className=\"text-sm font-medium text-gray-500\">Published</div>\n              <div className=\"mt-1 text-sm text-gray-900\">\n                {formatDate(image.published_at)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tabbed interface */}\n      <div className=\"bg-white shadow sm:rounded-lg\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8 px-6\" aria-label=\"Tabs\">\n            <button\n              onClick={() => setActiveTab('overview')}\n              className={`${\n                activeTab === 'overview'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Overview\n            </button>\n            <button\n              onClick={() => setActiveTab('requirements')}\n              className={`${\n                activeTab === 'requirements'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Requirements\n            </button>\n            <button\n              onClick={() => setActiveTab('files')}\n              className={`${\n                activeTab === 'files'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Files\n            </button>\n            {image.tags && Object.keys(image.tags).length > 0 && (\n              <button\n                onClick={() => setActiveTab('tags')}\n                className={`${\n                  activeTab === 'tags'\n                    ? 'border-indigo-500 text-indigo-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n              >\n                Tags\n              </button>\n            )}\n          </nav>\n        </div>\n\n        {/* Tab content */}\n        <div className=\"p-6\">\n          {activeTab === 'overview' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Image Information</h3>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Name</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{image.name}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Version</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{image.version}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">UUID</div>\n                    <div className=\"mt-1 text-sm text-gray-900 font-mono\">{image.uuid}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Owner</div>\n                    <div className=\"mt-1 text-sm text-gray-900 font-mono\">{image.owner_uuid}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">OS</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{image.os}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Type</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{image.type}</div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">State</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(image.state)}`}>\n                        {image.state}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"sm:col-span-1\">\n                    <div className=\"text-sm font-medium text-gray-500\">Published</div>\n                    <div className=\"mt-1 text-sm text-gray-900\">{formatDate(image.published_at)}</div>\n                  </div>\n                  {image.homepage && (\n                    <div className=\"sm:col-span-2\">\n                      <div className=\"text-sm font-medium text-gray-500\">Homepage</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">\n                        <a \n                          href={image.homepage} \n                          className=\"text-indigo-600 hover:text-indigo-900\" \n                          target=\"_blank\" \n                          rel=\"noopener noreferrer\"\n                        >\n                          {image.homepage}\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                  {image.description && (\n                    <div className=\"sm:col-span-2\">\n                      <div className=\"text-sm font-medium text-gray-500\">Description</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">{image.description}</div>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {image.acl && image.acl.length > 0 && (\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Access Control</h3>\n                  <div className=\"mt-2\">\n                    {image.acl.map((entry, index) => (\n                      <span \n                        key={index}\n                        className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 mr-2 mb-2\"\n                      >\n                        {entry}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'requirements' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">System Requirements</h3>\n                {!image.requirements ? (\n                  <div className=\"text-center py-6\">\n                    <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                    <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No Requirements</h3>\n                    <p className=\"mt-1 text-sm text-gray-500\">This image does not specify any system requirements.</p>\n                  </div>\n                ) : (\n                  <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                    {image.requirements.min_memory && (\n                      <div className=\"sm:col-span-1\">\n                        <div className=\"text-sm font-medium text-gray-500\">Minimum Memory</div>\n                        <div className=\"mt-1 text-sm text-gray-900\">{formatMemory(image.requirements.min_memory)}</div>\n                      </div>\n                    )}\n                    {image.requirements.brand && (\n                      <div className=\"sm:col-span-1\">\n                        <div className=\"text-sm font-medium text-gray-500\">VM Brand</div>\n                        <div className=\"mt-1 text-sm text-gray-900\">{image.requirements.brand}</div>\n                      </div>\n                    )}\n                    {image.requirements.min_platform && Object.keys(image.requirements.min_platform).length > 0 && (\n                      <div className=\"sm:col-span-2\">\n                        <div className=\"text-sm font-medium text-gray-500\">Minimum Platform Versions</div>\n                        <div className=\"mt-1 space-y-2\">\n                          {Object.entries(image.requirements.min_platform).map(([key, value]) => (\n                            <div key={key} className=\"text-sm text-gray-900\">\n                              <span className=\"font-medium\">{key}:</span> {value}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'files' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Image Files</h3>\n                {!image.files || image.files.length === 0 ? (\n                  <div className=\"text-center py-6\">\n                    <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\" />\n                    </svg>\n                    <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No Files</h3>\n                    <p className=\"mt-1 text-sm text-gray-500\">No file information is available for this image.</p>\n                  </div>\n                ) : (\n                  <div className=\"overflow-hidden shadow ring-1 ring-black ring-opacity-5 rounded-lg\">\n                    <table className=\"min-w-full divide-y divide-gray-300\">\n                      <thead className=\"bg-gray-50\">\n                        <tr>\n                          <th scope=\"col\" className=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6\">\n                            Path\n                          </th>\n                          <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                            Size\n                          </th>\n                          <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                            Compression\n                          </th>\n                          <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                            SHA1\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"divide-y divide-gray-200 bg-white\">\n                        {image.files.map((file, index) => (\n                          <tr key={index}>\n                            <td className=\"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6\">\n                              {file.path || `File ${index + 1}`}\n                            </td>\n                            <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                              {formatFileSize(file.size)}\n                            </td>\n                            <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                              {file.compression || 'None'}\n                            </td>\n                            <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500 font-mono\">\n                              {file.sha1 ? `${file.sha1.substring(0, 10)}...` : 'N/A'}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'tags' && image.tags && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">Image Tags</h3>\n                <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  {Object.entries(image.tags).map(([key, value]) => (\n                    <div key={key} className=\"sm:col-span-1\">\n                      <div className=\"text-sm font-medium text-gray-500\">{key}</div>\n                      <div className=\"mt-1 text-sm text-gray-900\">{value}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Action buttons */}\n      <div className=\"mt-6 flex flex-col-reverse space-y-4 space-y-reverse sm:flex-row-reverse sm:justify-end sm:space-y-0 sm:space-x-3 sm:space-x-reverse\">\n        <button\n          type=\"button\"\n          className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          <svg className=\"-ml-1 mr-2 h-5 w-5 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\n          </svg>\n          Edit Image\n        </button>\n        <button\n          type=\"button\"\n          className=\"inline-flex items-center px-4 py-2 border border-indigo-300 shadow-sm text-sm font-medium rounded-md text-indigo-700 bg-white hover:bg-indigo-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          <svg className=\"-ml-1 mr-2 h-5 w-5 text-indigo-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\" />\n          </svg>\n          Create VM from Image\n        </button>\n        {image.state !== 'disabled' && (\n          <button\n            type=\"button\"\n            className=\"inline-flex items-center px-4 py-2 border border-red-300 shadow-sm text-sm font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n          >\n            <svg className=\"-ml-1 mr-2 h-5 w-5 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n            </svg>\n            Disable Image\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageDetail;"],"names":["ImageDetail","uuid","useParams","image","setImage","useState","loading","setLoading","error","setError","activeTab","setActiveTab","useEffect","async","imageData","getImage","data","err","_err$response","_err$response$data","response","message","fetchData","formatDate","dateString","Date","toLocaleDateString","toLocaleTimeString","formatFileSize","sizeInBytes","kb","mb","gb","toFixed","getStatusColor","state","toLowerCase","_jsx","className","children","_jsxs","Link","to","fill","viewBox","fillRule","d","clipRule","name","version","description","xmlns","stroke","strokeLinecap","strokeLinejoin","strokeWidth","os","type","published_at","onClick","tags","Object","keys","length","owner_uuid","homepage","href","target","rel","acl","map","entry","index","requirements","min_memory","sizeInMB","brand","min_platform","entries","_ref","key","value","files","scope","file","path","size","compression","sha1","substring","_ref2"],"sourceRoot":""}